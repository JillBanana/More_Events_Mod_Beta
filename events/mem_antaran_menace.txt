####################################
#
# Antaran Menace - Midgame Crisis
#
# Coding by Malthus
#
####################################

namespace = mem_antarans

# mem_antarans.1   |Setup Event at Game Start
# mem_antarans.2   |Empire Targeting for Raids
# mem_antarans.3   |Rift Spawning for Raids
# mem_antarans.4   |Notification Event that a Rift is forming
# mem_antarans.5   |Rift opens and fleet spawn events get linked
# mem_antarans.10  |Establishing communications with every country that does not already know them (is started at fleet spawn 100 and 101)
# mem_antarans.20  |Information event about a known empire being attacked
# mem_antarans.21  |Information event about an unknown empire being attacked
# mem_antarans.40  |Finishing investigation of first Rift
# mem_antarans.50  |Retaliation Fleet has been destroyed by target empire ready to progress quest
# mem_antarans.51  |Antaran system spawned
# mem_antarans.52  |Wormhole connection established
# mem_antarans.98  |Test Event for the Rift
# mem_antarans.99  |Test Event to show Targets
########################################################
# Fleet Spawning and Raiding Events
########################################################
# mem_antarans.100 |Retaliation Fleet spawn event
# mem_antarans.101 |Raiding Fleet spawn event
# mem_antarans.105 |Antaran Raiding or Retaliation fleet has been destroyed
# mem_antarans.110 |Fleet event sending Raiding/Retaliation fleet to target planet
# mem_antarans.111 |Planet has been raided and now gets debuff and owner flags are being changed
# mem_antarans.112 |Fleet event sending Raiding/Retaliation fleet home to the rift and let them vanish
# mem_antarans.113 |Delete Rift after fleet has left (on monthly pulse)
########################################################
# Introductionary Events
########################################################
# mem_antarans.200 |Visiting a system with a broken/shattered planet (flagged in the first event)
# mem_antarans.201 |Finished Project on first broken world
# mem_antarans.202 |Finished Anomaly Version 1
# mem_antarans.203 |Finished Anomaly Version 2
# mem_antarans.204 |Finished Anomaly Version 3
# mem_antarans.205 |Finished Anomaly Version 4
# mem_antarans.206 |Finished Project of Anomaly 4
########################################################
# Story Events
########################################################
# mem_antarans.250 |Starting damper field bypass events
# mem_antarans.250 |Crashed antaran ship excavated
# mem_antarans.251 |Drifting antaran wreckage found in deep space

# Setup Event at Game Start for randomly disabling the Crisis
event = {
	id = mem_antarans.1
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		random_list = {
#			3 = {
#				set_global_flag = mem_antarans_disabled
#			}
			1 = {
#				set_timed_global_flag = {
#					flag = mem_antarans_recent_attack
#					days = 9000 # 25 years
#				}
				set_global_flag = mem_antarans_enabled
				every_country = {
					limit = {
						is_country_type = default
					}
					random_list = {
						1 = {
							capital_scope = {
								solar_system = {
									random_neighbor_system = {
										random_neighbor_system = {
											limit = {
												NOT = {
													has_star_flag = empire_home_system
												}
												any_planet = {
													OR = {
														is_planet_class = pc_barren
														is_planet_class = pc_barren_cold
														is_planet_class = pc_toxic
														is_planet_class = pc_frozen
													}
												}
											}
											set_star_flag = mem_antaran_destroyed_planet_system
											random_system_planet = {
												limit = {
													OR = {
														is_planet_class = pc_barren
														is_planet_class = pc_barren_cold
														is_planet_class = pc_toxic
														is_planet_class = pc_frozen
													}
												}
												random_list = {
													1 = {
														change_pc = pc_shattered
													}
													1 = {
														change_pc = pc_broken
													}
												}
												set_planet_flag = mem_antaran_destroyed_planet
											}
										}
									}
								}
							}
						}
						1 = {
						}
					}
				}
			}
		}
	}
}

# Empire Targeting for Raids
event = {
	id = mem_antarans.2
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_antarans_enabled
		NOT = {
			has_global_flag = mem_antarans_disabled
		}
		years_passed >= 19
	}
	
	immediate = {
		# Targeting first Raid Target
		IF = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_1
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = default
					NOR = {
						has_country_flag = mem_antarans_raided_empire #this is a timed flag set when an empire gets attacked
						has_country_flag = mem_antarans_target_2
						has_country_flag = mem_antarans_target_3
						has_country_flag = mem_antarans_target_4
						has_country_flag = mem_antarans_target_5
					}
					any_owned_planet = {
						is_colony = yes
						is_under_colonization = no
						is_capital = no
						NOT = {
							has_planet_flag = mem_antarans_raided_planet #this is a timed flag set when the planet is raided
						}
					}
				}
				set_country_flag = mem_antarans_target_1
			}
		}
		# Targeting second Raid Target
		IF = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_2
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = default
					NOR = {
						has_country_flag = mem_antarans_raided_empire #this is a timed flag set when an empire gets attacked
						has_country_flag = mem_antarans_target_1
						has_country_flag = mem_antarans_target_3
						has_country_flag = mem_antarans_target_4
						has_country_flag = mem_antarans_target_5
					}
					any_owned_planet = {
						is_colony = yes
						is_under_colonization = no
						is_capital = no
						NOT = {
							has_planet_flag = mem_antarans_raided_planet #this is a timed flag set when the planet is raided
						}
					}
				}
				set_country_flag = mem_antarans_target_2
			}
		}
		# Targeting third Raid Target
		IF = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_3
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = default
					NOR = {
						has_country_flag = mem_antarans_raided_empire #this is a timed flag set when an empire gets attacked
						has_country_flag = mem_antarans_target_1
						has_country_flag = mem_antarans_target_2
						has_country_flag = mem_antarans_target_4
						has_country_flag = mem_antarans_target_5
					}
					any_owned_planet = {
						is_colony = yes
						is_under_colonization = no
						is_capital = no
						NOT = {
							has_planet_flag = mem_antarans_raided_planet #this is a timed flag set when the planet is raided
						}
					}
				}
				set_country_flag = mem_antarans_target_3
			}
		}
		# Targeting fourth Raid Target
		IF = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_4
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = default
					NOR = {
						has_country_flag = mem_antarans_raided_empire #this is a timed flag set when an empire gets attacked
						has_country_flag = mem_antarans_target_1
						has_country_flag = mem_antarans_target_2
						has_country_flag = mem_antarans_target_3
						has_country_flag = mem_antarans_target_5
					}
					any_owned_planet = {
						is_colony = yes
						is_under_colonization = no
						is_capital = no
						NOT = {
							has_planet_flag = mem_antarans_raided_planet #this is a timed flag set when the planet is raided
						}
					}
				}
				set_country_flag = mem_antarans_target_4
			}
		}
		# Targeting fifth Raid Target
		IF = {
			limit = {
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_5
					}
				}
			}
			random_country = {
				limit = {
					is_country_type = default
					NOR = {
						has_country_flag = mem_antarans_raided_empire #this is a timed flag set when an empire gets attacked
						has_country_flag = mem_antarans_target_1
						has_country_flag = mem_antarans_target_2
						has_country_flag = mem_antarans_target_3
						has_country_flag = mem_antarans_target_4
					}
					any_owned_planet = {
						is_colony = yes
						is_under_colonization = no
						is_capital = no
						NOT = {
							has_planet_flag = mem_antarans_raided_planet #this is a timed flag set when the planet is raided
						}
					}
				}
				set_country_flag = mem_antarans_target_5
			}
		}
		# TODO this is for testing purpose, take out later
		random_country = {
			limit = {
				is_ai = no
			}
			country_event = { id = mem_antarans.99 days = 5 }
		}
		#Following events set the Antaran Raids in motion
		every_country = {
			limit = {
				OR = {
					has_country_flag = mem_antarans_target_1
					has_country_flag = mem_antarans_target_2
					has_country_flag = mem_antarans_target_3
					has_country_flag = mem_antarans_target_4
					has_country_flag = mem_antarans_target_5
				}
			}
			country_event = { id = mem_antarans.3 days = 30 random = 10 }
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_1
			}
			save_event_target_as = mem_antarans_target_1
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_2
			}
			save_event_target_as = mem_antarans_target_2
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_3
			}
			save_event_target_as = mem_antarans_target_3
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_4
			}
			save_event_target_as = mem_antarans_target_4
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_5
			}
			save_event_target_as = mem_antarans_target_5
		}
		# TODO Also start a notification message for all not attacked human players from here later
		every_country = {
			limit = {
				is_ai = no
				NOR = {
					has_country_flag = mem_antarans_target_1
					has_country_flag = mem_antarans_target_2
					has_country_flag = mem_antarans_target_3
					has_country_flag = mem_antarans_target_4
					has_country_flag = mem_antarans_target_5
				}
			}
			IF = { # checks if the country has direct contact to one of the targeted empires
				limit = {
					OR = { 
						has_communications = event_target:mem_antarans_target_1
						has_communications = event_target:mem_antarans_target_2
						has_communications = event_target:mem_antarans_target_3
						has_communications = event_target:mem_antarans_target_4
						has_communications = event_target:mem_antarans_target_5
					}
				}
				country_event = { id = mem_antarans.20 days = 60 random = 10 }
			}
			ELSE_IF = { # checks if the country has contact to another country that has contact to one of the targeted empires
				limit = {
					NOR = {
						has_communications = event_target:mem_antarans_target_1
						has_communications = event_target:mem_antarans_target_2
						has_communications = event_target:mem_antarans_target_3
						has_communications = event_target:mem_antarans_target_4
						has_communications = event_target:mem_antarans_target_5
					}
					any_country = {
						has_communications = prev
						OR = {
							has_communications = event_target:mem_antarans_target_1
							has_communications = event_target:mem_antarans_target_2
							has_communications = event_target:mem_antarans_target_3
							has_communications = event_target:mem_antarans_target_4
							has_communications = event_target:mem_antarans_target_5
						}
					}
				}
				country_event = { id = mem_antarans.21 days = 90 random = 10 }
			}
		}
	}
}

# Hidden Event to place the Ambient Object ( Dimensional Rift opening ) at the rim of a target system
country_event = {
	id = mem_antarans.3
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		IF = {
			limit = {
				is_ai = no
				NOT = {
					has_country_flag = mem_antarans_rift_investigation
				}
			}
			capital_scope = {
				enable_special_project = {
					name = MEM_ANTARANS_RIFT_INVESTIGATION
					location = this
					owner = root
				}
			}
			set_country_flag = mem_antarans_rift_investigation
		}
		IF = { # check if the empire is target of a retaliation
			limit = {
				has_country_flag = mem_antarans_retaliation
			}
			random_owned_planet = {
				limit = {
					is_capital = yes
				}
				set_timed_planet_flag = {
					flag = mem_antarans_raiding_target
					days = 600
				}
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						THIS = {
							save_event_target_as = mem_antarans_target_sun
						}
					}
					create_ambient_object = { # TODO exchange that later with a custom made one from frog
						type = "mem_antaran_wormhole_big_object"
					}
					random_system_ambient_object = {
						limit = { is_same_value = last_created_ambient_object }
						set_location = {
							target = event_target:mem_antarans_target_sun
							distance = 150
							angle = random
						}
						set_ambient_object_flag = mem_antarans_rift
						save_event_target_as = mem_antarans_rift
					}
				}
			}
			# start next event to notify the player
			country_event = { id = mem_antarans.4 days = 5 }
			# start overnext event to open the rift and spawn enemy fleet
			country_event = { id = mem_antarans.5 days = 30 }
		}
		ELSE_IF = { # failsafe check if valid raiding target has been lost in the meantime because of a war or something else - check here and use normal raiding target
			limit = {
				any_owned_planet = {
					is_colony = yes
					is_under_colonization = no
					is_capital = no
					NOT = {
						has_planet_flag = mem_antarans_raided_planet
					}
				}
			}
			random_owned_planet = {
				limit = {
					is_colony = yes
					is_capital = no
					NOT = {
						has_planet_flag = mem_antarans_raided_planet
					}
				}
				set_timed_planet_flag = {
					flag = mem_antarans_raiding_target
					days = 600
				}
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						THIS = {
							save_event_target_as = mem_antarans_target_sun
						}
					}
					create_ambient_object = { # TODO exchange that later with a custom made one by frog
						type = "mem_antaran_wormhole_small_object"
					}
					random_system_ambient_object = {
						limit = { is_same_value = last_created_ambient_object }
						set_location = {
							target = event_target:mem_antarans_target_sun
							distance = 150
							angle = random
						}
						set_ambient_object_flag = mem_antarans_rift
						save_event_target_as = mem_antarans_rift
					}
				}
			}
			# start next event to notify the player
			country_event = { id = mem_antarans.4 days = 5 }
			# start overnext event to open the rift and spawn enemy fleet
			country_event = { id = mem_antarans.5 days = 30 }
		}
		ELSE = { # failsafe target - if not even the capital is left there is nothing happening anyway
			random_owned_planet = {
				limit = {
					is_colony = yes
					is_under_colonization = no
				}
				set_timed_planet_flag = {
					flag = mem_antarans_raiding_target
					days = 600
				}
				solar_system = {
					random_system_planet = {
						limit = {
							is_star = yes
						}
						THIS = {
							save_event_target_as = mem_antarans_target_sun
						}
					}
					create_ambient_object = { # TODO exchange that later with a custom made one by frog
						type = "mem_antaran_wormhole_small_object"
					}
					random_system_ambient_object = {
						limit = { is_same_value = last_created_ambient_object }
						set_location = {
							target = event_target:mem_antarans_target_sun
							distance = 150
							angle = random
						}
						set_ambient_object_flag = mem_antarans_rift
						save_event_target_as = mem_antarans_rift
					}
				}
			}
			# start next event to notify the player
			country_event = { id = mem_antarans.4 days = 5 }
			# start overnext event to open the rift and spawn enemy fleet
			country_event = { id = mem_antarans.5 days = 30 }
		}
		last_created_ambient_object = {
			IF = {
				limit = {
					ROOT = {
						has_country_flag = mem_antarans_target_1
					}
				}
				set_ambient_object_flag = mem_antarans_rift_1
			}
			IF = {
				limit = {
					ROOT = {
						has_country_flag = mem_antarans_target_2
					}
				}
				set_ambient_object_flag = mem_antarans_rift_2
			}
			IF = {
				limit = {
					ROOT = {
						has_country_flag = mem_antarans_target_3
					}
				}
				set_ambient_object_flag = mem_antarans_rift_3
			}
			IF = {
				limit = {
					ROOT = {
						has_country_flag = mem_antarans_target_4
					}
				}
				set_ambient_object_flag = mem_antarans_rift_4
			}
			IF = {
				limit = {
					ROOT = {
						has_country_flag = mem_antarans_target_5
					}
				}
				set_ambient_object_flag = mem_antarans_rift_5
			}
		}
	}
}

# Notification Event that a Rift is forming
country_event = {
	id = mem_antarans.4
	title = mem_antarans.4.name
	desc = { # for first encounter
		text = mem_antarans.4a.desc
		trigger = {
			NOR = { 
				has_country_flag = mem_antarans_retaliation 
				has_country_flag = mem_antarans_met
			}
		}
	}
	desc = { # after first encounter has happened before
		text = mem_antarans.4b.desc
		trigger = {
			NOT = { 
				has_country_flag = mem_antarans_retaliation 
			}
			has_country_flag = mem_antarans_met
		}
	}
	desc = { # for retaliation encounter
		text = mem_antarans.4c.desc
		trigger = { has_country_flag = mem_antarans_retaliation }
	}
	picture = GFX_evt_mem_space_battle # TODO we will need custom art for a picture of one of those rifts opening
	location = event_target:mem_antarans_target_sun
	
	is_triggered_only = yes
	
	#response in first encounter
	option = {
		name = mem_antarans.4.a
		trigger = {
			NOR = {
				has_country_flag = mem_antarans_met
				has_country_flag = mem_antarans_retaliation
			}
		}
	}
	
	#response in later encounter
	option = {
		name = mem_antarans.4.b
		trigger = {
			has_country_flag = mem_antarans_met
			NOT = {
				has_country_flag = mem_antarans_retaliation
			}
		}
	}
	
	#response in retaliation encounter
	option = {
		name = mem_antarans.4.c
		trigger = {
			has_country_flag = mem_antarans_retaliation
		}
	}
}

# Rift opens and fleet spawn events get linked
country_event = {
	id = mem_antarans.5
	title = mem_antarans.5.name
	desc = { # for first encounter
		text = mem_antarans.5a.desc
		trigger = {
			NOR = { 
				has_country_flag = mem_antarans_retaliation
				has_country_flag = mem_antarans_met
			}
		}
	}
	desc = { # after first encounter has happened before
		text = mem_antarans.5b.desc
		trigger = {
			NOT = { 
				has_country_flag = mem_antarans_retaliation 
			}
			has_country_flag = mem_antarans_met
		}
	}
	desc = { # for retaliation encounter
		text = mem_antarans.5c.desc
		trigger = { has_country_flag = mem_antarans_retaliation }
	}
	picture = GFX_evt_mem_space_battle # TODO we will need custom art for a picture of an opened rifts with ships coming through
	location = event_target:mem_antarans_rift
	
	is_triggered_only = yes
	
	immediate = {
		IF = { #in case of retaliation strike
			limit = {
				has_country_flag = mem_antarans_retaliation
			}
			# TODO Spawn event with diplo screen telling the player to face their wrath
			# Start spawning Retaliation fleet
			country_event = { id = mem_antarans.100 days = 2 }
		}
		IF = { #in case of first raiding encounter
			limit = {
				NOR = {
					has_country_flag = mem_antarans_retaliation
					has_country_flag = mem_antarans_met
				}
			}
			# TODO Spawn event with diplo screen telling the player to back off or face doom
			# Start spawning Raiding fleet
			country_event = { id = mem_antarans.101 days = 2 }
		}
		IF = { #in case of later raiding encounter
			limit = {
				NOT = {
					has_country_flag = mem_antarans_retaliation
				}
				has_country_flag = mem_antarans_met
			}
			# TODO Spawn event with diplo screen telling the player they are back to take more
			# Start spawning Raiding fleet
			country_event = { id = mem_antarans.101 days = 2 }
		}
	}
	#response in first encounter
	option = {
		name = mem_antarans.5.a
		trigger = {
			NOR = {
				has_country_flag = mem_antarans_met
				has_country_flag = mem_antarans_retaliation
			}
		}
	}
	
	#response in later encounter
	option = {
		name = mem_antarans.5.b
		trigger = {
			has_country_flag = mem_antarans_met
			NOT = {
				has_country_flag = mem_antarans_retaliation
			}
		}
	}
	
	#response in retaliation encounter
	option = {
		name = mem_antarans.5.c
		trigger = {
			has_country_flag = mem_antarans_retaliation
		}
	}
}

# Establishing communications with every country that does not already know them (is started at fleet spawn 100 and 101)
country_event = {
	id = mem_antarans.10
    hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = {
				NOT = {
					has_communications = ROOT
				}
			}
			establish_communications_no_message = ROOT
		}
	}
}

country_event = {
	id = mem_antarans.20
	title = mem_antarans.20.name
	desc = { # for those not having met them
		text = mem_antarans.20a.desc
		trigger = {
			NOT = { 
				has_country_flag = mem_antarans_met
			}
		}
	}
	desc = { # for those who have met them before
		text = mem_antarans.20b.desc
		trigger = {
			has_country_flag = mem_antarans_met
		}
	}

	picture = GFX_evt_mem_space_battle # TODO we will need custom art for a picture of one of those rifts opening
	location = event_target:mem_antaran_victim
	
	is_triggered_only = yes
	
	immediate = {
		random_country = {
			limit = {
				OR = {
					has_country_flag = mem_antarans_target_1
					has_country_flag = mem_antarans_target_2
					has_country_flag = mem_antarans_target_3
					has_country_flag = mem_antarans_target_4
					has_country_flag = mem_antarans_target_5
				}
				has_communications = root
			}
			save_event_target_as = mem_antaran_victim
		}
	}
	
	option = {
		name = "WORRYING"
	}
}

country_event = {
	id = mem_antarans.21
	title = mem_antarans.21.name
	desc = { # for those not having met them
		text = mem_antarans.21a.desc
		trigger = {
			NOT = { 
				has_country_flag = mem_antarans_met
			}
		}
	}
	desc = { # for those who have met them before
		text = mem_antarans.21b.desc
		trigger = {
			has_country_flag = mem_antarans_met
		}
	}

	picture = GFX_evt_mem_space_battle # TODO we will need custom art for a picture of one of those rifts opening
	
	is_triggered_only = yes
	
	option = {
		name = "WORRYING"
	}
}

# Finishing first Rift investigation
country_event = {
	id = mem_antarans.40
	title = mem_antarans.40.name
	desc = mem_antarans.40a.desc

	picture = GFX_evt_mem_space_battle # TODO change
	
	is_triggered_only = yes
	
	option = {
		name = "WORRYING"
		IF = {
			limit = {
				NOR = {
					has_technology = tech_wormhole_stabilization
					has_tech_option = tech_wormhole_stabilization
				}
			}
			add_research_option = tech_wormhole_stabilization
		}
		hidden_effect = {
			add_seen_bypass_type = wormhole
		}
	}
}

# Retaliation Fleet destroyed
country_event = {
	id = mem_antarans.50
	title = mem_antarans.50.name
	desc = mem_antarans.50a.desc

	picture = GFX_evt_mem_space_battle # TODO change
	
	trigger = {
		has_technology = tech_wormhole_stabilization
	}
	
	is_triggered_only = yes
	
	immediate = {
		set_country_flag = mem_antarans_rift_creation_start
	}
	
	option = {
		name = "WORRYING"
		capital_scope = {
			enable_special_project = {
				name = MEM_ANTARANS_RIFT_STABILIZATION
				location = this
				owner = root
			}
		}
	}
}

# Antaran system spawned
country_event = {
	id = mem_antarans.51
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = {
				is_rim_system = yes
			}
			spawn_system = { 
				min_distance = 70 
				max_distance = 150
				initializer = "mem_antaran_homesystem"
				hyperlane = no 
				is_discovered = yes
			}
		}
		country_event = { id = mem_antarans.52 days = 1 }
	}
}

# Wormhole connection established
country_event = {
	id = mem_antarans.52
	title = mem_antarans.52.name
	desc = mem_antarans.52.desc

	picture = GFX_evt_mem_space_battle # TODO change
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			solar_system = {
				random_system = {
					limit = {
						has_star_flag = mem_antaran_homesystem
					}
					prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
							spawn_natural_wormhole = {
							random_pos = yes
							orbit_angle = 360
						}
					}
					spawn_natural_wormhole = {
						random_pos = yes
						orbit_angle = 360
					}
					link_wormholes = prev
				}
			}
		}
	}
	
	option = {
		name = "WORRYING"
	}
}

# Retaliation Fleet spawn
country_event = {
	id = mem_antarans.100
    hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		IF = { # if the antarans already exist their country is saved as event target
			limit = {
				any_country = {
					has_country_flag = mem_antrarans_country
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_country
				}
				save_event_target_as = mem_antarans_country
				IF = {
					limit = {
						NOT = {
							has_communications = ROOT
						}
					}
					establish_communications_no_message = ROOT
				}	
			}
		}
		ELSE = { # otherwise the antaran country is created and saved as event target
			create_country = {
				name = "The Dark Ones"
				type = mem_antarans
				flag = {
					icon = {
						category = "domination"
						file = "domination_21.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"dark_purple"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				set_country_flag = mem_antarans_country
				set_graphical_culture = fallen_empire_04
				save_event_target_as = mem_antarans_country
				IF = {
					limit = {
						NOT = {
							has_communications = ROOT
						}
					}
					establish_communications_no_message = ROOT
				}
			}
		}
		random_country = { # establish communications with all other empires
			limit = {
				has_country_flag = mem_antarans_country
			}
			country_event = { id = mem_antarans.10 days = 1 }
		}
		random_system = {
			limit = {
				any_planet = {
					is_owned_by = root
					is_capital = yes
				}
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift
				}
				create_fleet = {
					name = "Raiders"
					settings = {
						spawn_debris = no 
						is_boss = no
					}
					effect = {
						set_owner = event_target:mem_antarans_country
						create_ship = {
							name = random
							design = "Supremacy"
							graphical_culture = "fallen_empire_04"
						}
						set_location = {
							target = PREV
							distance = 0
							angle = random 
						}
					}
				}
				last_created_fleet = { # fleet flag for bombarding event
					set_fleet_flag = mem_antarans_fleet
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 150
					fleet_event = { id = mem_antarans.110 days = 1 }
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_1
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_1
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_2
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_2
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_3
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_3
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_4
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_4
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_5
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_5
					}
				}
			}
		}
	}
}

# Raiding Fleet spawn
country_event = {
	id = mem_antarans.101
    hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		IF = { # if the antarans already exist their country is saved as event target
			limit = {
				any_country = {
					has_country_flag = mem_antrarans_country
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_country
				}
				save_event_target_as = mem_antarans_country
				IF = {
					limit = {
						NOT = {
							has_communications = ROOT
						}
					}
					establish_communications_no_message = ROOT
				}		
			}
		}
		ELSE = { # otherwise the antaran country is created and saved as event target
			create_country = {
				name = "The Dark Ones"
				type = mem_antarans
				flag = {
					icon = {
						category = "domination"
						file = "domination_21.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"dark_purple"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				set_country_flag = mem_antarans_country
				set_graphical_culture = fallen_empire_04
				save_event_target_as = mem_antarans_country
				IF = {
					limit = {
						NOT = {
							has_communications = ROOT
						}
					}
					establish_communications_no_message = ROOT
				}
			}
		}
		random_country = { # establish communications with all other empires
			limit = {
				has_country_flag = mem_antarans_country
			}
			country_event = { id = mem_antarans.10 days = 1 }
		}
		random_system = {
			limit = {
				any_planet = {
					has_planet_flag = mem_antarans_raiding_target
					is_owned_by = root
				}
			}
			random_system_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift
				}
				IF = { # weakest raiding fleet if not having researched destroyers yet
					limit = {
						ROOT = {
							NOT = {
								has_technology = tech_destroyers
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				IF = { # raiding fleet if not having researched cruisers yet
					limit = {
						ROOT = {
							has_technology = tech_destroyers
							NOT = {
								has_technology = tech_cruisers
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				IF = { # raiding fleet if not having researched battleships yet
					limit = {
						ROOT = {
							has_technology = tech_cruisers
							NOT = {
								has_technology = tech_battleships
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				IF = { # raiding fleet if not having researched any xl t1 weapon yet
					limit = {
						ROOT = {
							has_technology = tech_battleships
							NOR = {
								has_technology = tech_energy_lance_1
								has_technology = tech_mass_accelerator_1
								has_technology = tech_arc_emitter_1
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				IF = { # raiding fleet if not having researched any xl t2 weapon yet
					limit = {
						ROOT = {
							OR = {
								has_technology = tech_energy_lance_1
								has_technology = tech_mass_accelerator_1
								has_technology = tech_arc_emitter_1
							}
							NOR = {
								has_technology = tech_energy_lance_2
								has_technology = tech_mass_accelerator_2
								has_technology = tech_arc_emitter_2
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				IF = { # raiding fleet if having researched any xl t2 weapon
					limit = {
						ROOT = {
							OR = {
								has_technology = tech_energy_lance_2
								has_technology = tech_mass_accelerator_2
								has_technology = tech_arc_emitter_2
							}
						}
					}
					create_fleet = {
						name = "Raiders"
						settings = {
							spawn_debris = no 
							is_boss = no
						}
						effect = {
							set_owner = event_target:mem_antarans_country
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Supremacy"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							create_ship = {
								name = random
								design = "Glory"
								graphical_culture = "fallen_empire_04"
							}
							set_location = {
								target = PREV
								distance = 0
								angle = random 
							}
						}
					}
				}
				last_created_fleet = { # fleet flag for bombarding event
					set_fleet_flag = mem_antarans_fleet
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_aggro_range = 150
					fleet_event = { id = mem_antarans.110 days = 1 }
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_1
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_1
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_2
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_2
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_3
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_3
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_4
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_4
					}
				}
				IF = { # check which attack number the empire has (1 to 5) for destruction check to know which empire will be the target of a retaliation strike
					limit = {
						ROOT = {
							has_country_flag = mem_antarans_target_5
						}
					}
					last_created_fleet = {
						set_fleet_flag = mem_antarans_fleet_5
					}
				}
			}
		}
	}
}

# Antaran Raiding or Retaliation fleet has been destroyed
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = mem_antarans.105
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		FROMFROMFROM = {
			has_fleet_flag = mem_antarans_fleet
		}
	}
	
	immediate = {
		# check for 1
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_1
					}
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_1
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
				any_country = {
					has_country_flag = mem_antarans_target_1
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					is_same_value = ROOT
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
				any_country = {
					has_country_flag = mem_antarans_target_1
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_1
				}
				remove_country_flag = mem_antarans_target_1
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_1
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
				any_country = {
					has_country_flag = mem_antarans_target_1
					has_country_flag = mem_antarans_retaliation
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_1
				}
				remove_country_flag = mem_antarans_target_1
				remove_country_flag = mem_antarans_retaliation
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_1
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
				any_country = {
					has_country_flag = mem_antarans_target_1
					has_country_flag = mem_antarans_retaliation
					is_same_value = ROOT
				}
			}
			ROOT = {
				remove_country_flag = mem_antarans_retaliation
				remove_country_flag = mem_antarans_target_1
			}
			IF = {
				limit = {
					ROOT = {
						is_ai = no
						NOT = {
							has_country_flag = mem_antarans_rift_creation_start
						}
					}
				}
				ROOT = {
					set_country_flag = mem_antarans_rift_creation_start
					country_event = { id = mem_antarans.50 days = 2}
				}
			}
		}
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_1
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_1
				}
				destroy_ambient_object = THIS
			}
		}
		# check for 2
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_2
					}
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_2
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
				any_country = {
					has_country_flag = mem_antarans_target_2
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					is_same_value = ROOT
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
				any_country = {
					has_country_flag = mem_antarans_target_2
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_2
				}
				remove_country_flag = mem_antarans_target_2
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_2
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
				any_country = {
					has_country_flag = mem_antarans_target_2
					has_country_flag = mem_antarans_retaliation
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_2
				}
				remove_country_flag = mem_antarans_target_2
				remove_country_flag = mem_antarans_retaliation
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_2
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
				any_country = {
					has_country_flag = mem_antarans_target_2
					has_country_flag = mem_antarans_retaliation
					is_same_value = ROOT
				}
			}
			ROOT = {
				remove_country_flag = mem_antarans_retaliation
				remove_country_flag = mem_antarans_target_2
			}
			IF = {
				limit = {
					ROOT = {
						is_ai = no
						NOT = {
							has_country_flag = mem_antarans_rift_creation_start
						}
					}
				}
				ROOT = {
					set_country_flag = mem_antarans_rift_creation_start
					country_event = { id = mem_antarans.50 days = 2}
				}
			}
		}
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_2
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_2
				}
				destroy_ambient_object = THIS
			}
		}
		# check for 3
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_3
					}
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_3
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
				any_country = {
					has_country_flag = mem_antarans_target_3
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					is_same_value = ROOT
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
				any_country = {
					has_country_flag = mem_antarans_target_3
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_3
				}
				remove_country_flag = mem_antarans_target_3
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_3
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
				any_country = {
					has_country_flag = mem_antarans_target_3
					has_country_flag = mem_antarans_retaliation
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_3
				}
				remove_country_flag = mem_antarans_target_3
				remove_country_flag = mem_antarans_retaliation
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_3
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
				any_country = {
					has_country_flag = mem_antarans_target_3
					has_country_flag = mem_antarans_retaliation
					is_same_value = ROOT
				}
			}
			ROOT = {
				remove_country_flag = mem_antarans_retaliation
				remove_country_flag = mem_antarans_target_3
			}
			IF = {
				limit = {
					ROOT = {
						is_ai = no
						NOT = {
							has_country_flag = mem_antarans_rift_creation_start
						}
					}
				}
				ROOT = {
					set_country_flag = mem_antarans_rift_creation_start
					country_event = { id = mem_antarans.50 days = 2}
				}
			}
		}
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_3
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_3
				}
				destroy_ambient_object = THIS
			}
		}
		# check for 4
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_4
					}
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_4
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
				any_country = {
					has_country_flag = mem_antarans_target_4
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					is_same_value = ROOT
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
				any_country = {
					has_country_flag = mem_antarans_target_4
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_4
				}
				remove_country_flag = mem_antarans_target_4
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_4
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
				any_country = {
					has_country_flag = mem_antarans_target_4
					has_country_flag = mem_antarans_retaliation
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_4
				}
				remove_country_flag = mem_antarans_target_4
				remove_country_flag = mem_antarans_retaliation
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_4
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
				any_country = {
					has_country_flag = mem_antarans_target_4
					has_country_flag = mem_antarans_retaliation
					is_same_value = ROOT
				}
			}
			ROOT = {
				remove_country_flag = mem_antarans_retaliation
				remove_country_flag = mem_antarans_target_4
			}
			IF = {
				limit = {
					ROOT = {
						is_ai = no
						NOT = {
							has_country_flag = mem_antarans_rift_creation_start
						}
					}
				}
				ROOT = {
					set_country_flag = mem_antarans_rift_creation_start
					country_event = { id = mem_antarans.50 days = 2}
				}
			}
		}
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_4
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_4
				}
				destroy_ambient_object = THIS
			}
		}
		# check for 5
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
				NOT = {
					any_country = {
						has_country_flag = mem_antarans_target_5
					}
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_5
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
				any_country = {
					has_country_flag = mem_antarans_target_5
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					is_same_value = ROOT
				}
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
				any_country = {
					has_country_flag = mem_antarans_target_5
					NOT = {
						has_country_flag = mem_antarans_retaliation
					}
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_5
				}
				remove_country_flag = mem_antarans_target_5
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_5
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
				any_country = {
					has_country_flag = mem_antarans_target_5
					has_country_flag = mem_antarans_retaliation
					NOT = {
						is_same_value = ROOT
					}
				}
			}
			random_country = {
				limit = {
					has_country_flag = mem_antarans_target_5
				}
				remove_country_flag = mem_antarans_target_5
				remove_country_flag = mem_antarans_retaliation
			}
			ROOT = {
				set_country_flag = mem_antarans_retaliation
				set_country_flag = mem_antarans_target_5
			}
		}
		ELSE_IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
				any_country = {
					has_country_flag = mem_antarans_target_5
					has_country_flag = mem_antarans_retaliation
					is_same_value = ROOT
				}
			}
			ROOT = {
				remove_country_flag = mem_antarans_retaliation
				remove_country_flag = mem_antarans_target_5
			}
			IF = {
				limit = {
					ROOT = {
						is_ai = no
						NOT = {
							has_country_flag = mem_antarans_rift_creation_start
						}
					}
				}
				ROOT = {
					set_country_flag = mem_antarans_rift_creation_start
					country_event = { id = mem_antarans.50 days = 2}
				}
			}
		}
		IF = {
			limit = {
				FROMFROMFROM ={
					has_fleet_flag = mem_antarans_fleet_5
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_5
				}
				destroy_ambient_object = THIS
			}
		}
	}
}

# tells the raiding or retaliation fleet to move to the target planet to start bombarding
fleet_event = {
	id = mem_antarans.110
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		queue_actions = {
			repeat	= {
				find_closest_planet  = {
					trigger = {
						id = mem_antarans_action.1
						has_planet_flag = mem_antarans_raiding_target
					}
					found_planet = {
						move_to = this
						orbit_planet = this
					}
				}
				wait = {
					duration = 120
				}
				effect = {
					id = mem_antarans_action.2
					solar_system = {
						random_system_planet = { 
							limit = {
								has_planet_flag = mem_antarans_raiding_target
							}
							planet_event = { id = mem_antarans.111 }
						}
					}
				}
			}
		}
	}
}

# Planet has been raided and now gets debuff and owner flags are being changed
planet_event = {
	id = mem_antarans.111
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		solar_system = {
            any_ship_in_system = { 
                fleet = {
                    exists = this
					OR = {
						has_fleet_flag = mem_antarans_fleet_1
						has_fleet_flag = mem_antarans_fleet_2
						has_fleet_flag = mem_antarans_fleet_3
						has_fleet_flag = mem_antarans_fleet_4
						has_fleet_flag = mem_antarans_fleet_5
					}
                    orbit = {
                        is_same_value = root
                    }
                }
            }
        }
	}
	
	immediate = {
		add_modifier = {
			modifier = mem_antarans_raided
			days = 3600
		}
		set_timed_planet_flag = {
			flag = mem_antarans_raided_planet
			days = 5400 # 15 years
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_retaliation
				}
			}
			random_tile = {
				limit = {
					has_blocker = no
				}
				set_blocker = tb_bomb_crater
			}
			random_tile = {
				limit = {
					has_blocker = no
				}
				set_blocker = tb_bomb_crater
			}
			random_tile = {
				limit = {
					has_blocker = no
				}
				set_blocker = tb_bomb_crater
			}
			random_tile = {
				limit = {
					has_blocker = no
				}
				set_blocker = tb_bomb_crater
			}
			random_tile = {
				limit = {
					has_blocker = no
				}
				set_blocker = tb_bomb_crater
			}
			every_tile = {
				limit = {
					has_blocker = no
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
		}
		ELSE = {
			random_tile = {
				limit = {
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
			random_tile = {
				limit = {
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
			random_tile = {
				limit = {
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
			random_tile = {
				limit = {
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
			random_tile = {
				limit = {
					has_building = yes
					is_ruined = no
				}
				set_ruined = yes
			}
		}
		solar_system = {
			random_fleet_in_system = {
				limit = {
					exists = owner
					owner = { is_country_type = mem_antarans }
				}
				fleet_event = { id = mem_antarans.112 days = 1 }
			}
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_target_1
				}
			}
			set_timed_global_flag = {
				flag = mem_antarans_raid_1_finished
				days = 720 # 2 years
			}
			owner = {
				remove_country_flag = mem_antarans_target_1
			}
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_target_2
				}
			}
			set_timed_global_flag = {
				flag = mem_antarans_raid_2_finished
				days = 720 # 2 years
			}
			owner = {
				remove_country_flag = mem_antarans_target_2
			}
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_target_3
				}
			}
			set_timed_global_flag = {
				flag = mem_antarans_raid_3_finished
				days = 720 # 2 years
			}
			owner = {
				remove_country_flag = mem_antarans_target_3
			}
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_target_4
				}
			}
			set_timed_global_flag = {
				flag = mem_antarans_raid_4_finished
				days = 720 # 2 years
			}
			owner = {
				remove_country_flag = mem_antarans_target_4
			}
		}
		IF = {
			limit = {
				owner = {
					has_country_flag = mem_antarans_target_5
				}
			}
			set_timed_global_flag = {
				flag = mem_antarans_raid_5_finished
				days = 720 # 2 years
			}
			owner = {
				remove_country_flag = mem_antarans_target_5
			}
		}
	}
}

# sending raiding or retaliation fleet home to the rift and let them vanish
fleet_event = {
	id = mem_antarans.112
	hide_window = yes
	
	is_triggered_only = yes

	immediate = {
		orbit = {
			solar_system = {
				random_system_ambient_object = {
					limit = {
						has_ambient_object_flag = mem_antarans_rift
					}
					save_event_target_as = mem_antarans_rift
				}
			}
		}
		clear_fleet_actions = ROOT
		queue_actions = {
			move_to = event_target:mem_antarans_rift
			effect = {
				id = mem_antarans_action.3
				delete_fleet  = this
			}
		}
	}
}

# delete Rift after fleet has left (on monthly pulse)
event = {
	id = mem_antarans.113
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_global_flag = mem_antarans_raid_1_finished
			has_global_flag = mem_antarans_raid_2_finished
			has_global_flag = mem_antarans_raid_3_finished
			has_global_flag = mem_antarans_raid_4_finished
			has_global_flag = mem_antarans_raid_5_finished
		}
		any_ambient_object = {
			has_ambient_object_flag = mem_antarans_rift
		}
	}
	
	immediate = {
		IF = {
			limit = {
				any_ambient_object = {
					has_ambient_object_flag = mem_antarans_rift_1
				}
				has_global_flag = mem_antarans_raid_1_finished
				NOT = {
					any_country = {
						any_owned_fleet = {
							has_fleet_flag = mem_antarans_fleet_1
						}
					}
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_1
				}
				destroy_ambient_object = THIS
			}
		}
		IF = {
			limit = {
				any_ambient_object = {
					has_ambient_object_flag = mem_antarans_rift_2
				}
				has_global_flag = mem_antarans_raid_2_finished
				NOT = {
					any_country = {
						any_owned_fleet = {
							has_fleet_flag = mem_antarans_fleet_2
						}
					}
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_2
				}
				destroy_ambient_object = THIS
			}
		}
		IF = {
			limit = {
				any_ambient_object = {
					has_ambient_object_flag = mem_antarans_rift_3
				}
				has_global_flag = mem_antarans_raid_3_finished
				NOT = {
					any_country = {
						any_owned_fleet = {
							has_fleet_flag = mem_antarans_fleet_3
						}
					}
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_3
				}
				destroy_ambient_object = THIS
			}
		}
		IF = {
			limit = {
				any_ambient_object = {
					has_ambient_object_flag = mem_antarans_rift_4
				}
				has_global_flag = mem_antarans_raid_4_finished
				NOT = {
					any_country = {
						any_owned_fleet = {
							has_fleet_flag = mem_antarans_fleet_4
						}
					}
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_4
				}
				destroy_ambient_object = THIS
			}
		}
		IF = {
			limit = {
				any_ambient_object = {
					has_ambient_object_flag = mem_antarans_rift_5
				}
				has_global_flag = mem_antarans_raid_5_finished
				NOT = {
					any_country = {
						any_owned_fleet = {
							has_fleet_flag = mem_antarans_fleet_5
						}
					}
				}
			}
			random_ambient_object = {
				limit = {
					has_ambient_object_flag = mem_antarans_rift_5
				}
				destroy_ambient_object = THIS
			}
		}
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
ship_event = {
	id = mem_antarans.200
	title = mem_antarans.200.name
	desc = { # haven't seen anything antaran related so far
		text = mem_antarans.200a.desc
		trigger = {
			FromFrom = {
				NOT = {
					has_country_flag = mem_antaran_destroyed_planet_found
				}
			}
		}
	}
	desc = { # only seen another destroyed planet so far
		text = mem_antarans.200b.desc
		trigger = {
			FromFrom = {
				NOT = {
					has_country_flag = mem_antarans_met
				}
				has_country_flag = mem_antaran_destroyed_planet_found
			}
		}
	}
	desc = { # already met the antarans and seen a destroyed planet
		text = mem_antarans.200c.desc
		trigger = {
			FromFrom = {
				has_country_flag = mem_antarans_met
				has_country_flag = mem_antaran_destroyed_planet_found
			}
		}
	}
	location = FROM
	
	picture = GFX_evt_mem_space_battle # TODO we will need custom art for a picture of one of those rifts opening
	
	is_triggered_only = yes
	
	trigger = {
		FromFrom = {
			is_ai = no
		}
		From = {
			has_star_flag = mem_antaran_destroyed_planet_system
		}
	}
	
	immediate = {
		From = {
			remove_star_flag = mem_antaran_destroyed_planet_system
		}
	}
	
	option = {
		name = WORRYING
		IF = {
			limit = {
				FromFrom = {
					NOT = {
						has_country_flag = mem_antaran_destroyed_planet_found
					}
				}
			}
			solar_system = {
				random_system_planet = {
					limit = {
						has_planet_flag = mem_antaran_destroyed_planet
					}
					enable_special_project = {
						name = MEM_ANTARANS_BROKEN_PLANET_INVESTIGATION
						location = this
						owner = root.owner
					}
				}
			}
			FromFrom = {
				set_country_flag = mem_antaran_destroyed_planet_found
			}
		}
	}
}

# Finished Project on first broken world
ship_event = {
	id = mem_antarans.201
	title = mem_antarans.201.name
	desc = {
		text = mem_antarans.201a.desc
		trigger = {
			owner = {
				NOT = {
					has_country_flag = mem_antarans_met
				}
			}
		}
	}
	desc = {
		text = mem_antarans.201b.desc
		trigger = {
			owner = {
				has_country_flag = mem_antarans_met
			}
		}
	}
	picture = GFX_evt_mem_orila_pods
	show_sound = event_scanner
	location = FROM
	
	is_triggered_only = yes
	
	option = {
		name = mem_antarans.201.a
	}
}

# Finished Anomaly Version 1
ship_event = {
	id = mem_antarans.202
	title = mem_antarans.202.name
	desc = mem_antarans.202.desc
	picture = GFX_evt_mining_station
	show_sound = event_ship_bridge
	location = FROM
	
	is_triggered_only = yes
			
	immediate = {
		From = { orbital_deposit_tile = { clear_deposits = yes } }
	}

	option = {
		name = WORRYING
		hidden_effect = {
			From = { 
				orbital_deposit_tile = {
					add_deposit = d_vast_engineering_deposit
				}
			}
		}
	}
}

# Finished Anomaly Version 2
ship_event = {
	id = mem_antarans.203
	title = mem_antarans.203.name
	desc = mem_antarans.203.desc
	picture = GFX_evt_mining_station
	show_sound = event_ship_bridge
	location = FROM
	
	is_triggered_only = yes
			
	immediate = {
		From = { orbital_deposit_tile = { clear_deposits = yes } }
	}

	option = {
		name = WORRYING
		hidden_effect = {
			From = { 
				orbital_deposit_tile = {
					add_deposit = d_vast_engineering_deposit
				}
			}
		}
	}
}

# Finished Anomaly Version 3
ship_event = {
	id = mem_antarans.204
	title = mem_antarans.204.name
	desc = mem_antarans.204.desc
	picture = GFX_evt_mining_station
	show_sound = event_ship_bridge
	location = FROM
	
	is_triggered_only = yes
			
	immediate = {
		From = { orbital_deposit_tile = { clear_deposits = yes } }
	}

	option = {
		name = WORRYING
		From = { 
			orbital_deposit_tile = {
				add_deposit = d_vast_society_deposit
			}
		}
	}
}

# Finished Anomaly Version 4
ship_event = {
	id = mem_antarans.205
	title = mem_antarans.205.name
	desc = mem_antarans.205.desc
	picture = GFX_evt_mining_station
	show_sound = event_ship_bridge
	location = FROM
	
	is_triggered_only = yes
			
	option = {
		name = mem_antarans.205.a
	}
}

# Finished Anomaly Version 4 Project
ship_event = {
	id = mem_antarans.206
	title = mem_antarans.206.name
	desc = mem_antarans.206.desc
	picture = GFX_evt_mining_station
	show_sound = event_ship_bridge
	location = ROOT
	
	is_triggered_only = yes
			
	immediate = {
	}

	option = {
		name = mem_antarans.206.a
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier2researchreward
				min = @tier2researchmin
				max = @tier2researchmax
			}
		}
	}
}

# Damper field story chain
country_event = {
	id = mem_antarans.250
	hide_window = yes
	trigger = {
		years_passed >= 50
		has_country_flag = mem_antarans_met
		NOT = {
			has_country_flag = mem_antarans_damper_field_quest
		}
	}
	mean_time_to_happen = {
		years = 100
	}
	immediate = {
		set_country_flag = mem_antarans_damper_field_quest
		random_list = {
			1 = {
				random_planet_within_border = {
					limit = {
						is_colony = no
						is_capital = no
						is_asteroid = no
					}
					set_planet_flag = mem_antarans_damper_field_planet
				}
			}
			1 = {
				random_planet_within_border = {
					limit = {
						is_colony = no
						is_asteroid = yes
						orbital_deposit_tile = {
							has_any_resource = no
						}
					}
					set_planet_flag = mem_antarans_damper_field_asteroid
				}
			}
			1 = {}
		}
		IF = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = mem_antarans_damer_field_planet
				}
			}
			random_planet_within_border = {
				limit = {
					has_planet_flag = mem_antarans_damer_field_planet
				}
				planet_event = { id = mem_antarans.251 }
			}
		}
		ELSE_IF = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = mem_antarans_damer_field_asteroid
				}
			}
			random_planet_within_border = {
				limit = {
					has_planet_flag = mem_antarans_damer_field_asteroid
				}
				#planet_event = { id = mem_antarans.251 }
			}
		}
		ELSE = {
			#start the deep space wreckage line
		}
	}
}

# Damper field anomaly 1 gets spawned
planet_event = {
	id = mem_antarans.251
	title = mem_antarans.251.name
	desc = mem_antarans.251.desc
	picture = GFX_evt_asteroid_approaching_planet
	show_sound = event_administrative_work
	location = ROOT
	is_triggered_only = yes
	
	option = {
		name = mem_antarans.251.a
		add_anomaly = mem_antarans_category_3
	}
}

# anomaly finished
ship_event = {
	id = mem_antarans.252
	title = mem_antarans.252.name
	desc = mem_antarans.252.desc
	picture = GFX_evt_asteroid_approaching_planet
	show_sound = event_ship_bridge
	location = FROM
	is_triggered_only = yes
	
	option = {
		name = mem_antarans.252.a
		owner = {
			capital_scope = {
				enable_special_project = {
					name = MEM_ANTARANS_DAMPER_FIELD_GENERATOR_INVESTIGATION
					location = this
					owner = root.owner
				}
			}
		}
	}
}

#Damper field project finished
country_event = {
	id = mem_antarans.260
	title = mem_antarans.260.name
	desc = mem_antarans.260.desc
	picture = GFX_evt_physics_research
	show_sound = event_ship_bridge
	is_triggered_only = yes

	option = {
		name = mem_antarans.260.a
		add_modifier = {
			modifier = mem_antarans_damper_field_exploit
			days = -1
		}
		add_research_option = tech_mem_antaran_damper_field_bypass 
	}
}

# spawn testfleet at capital
country_event = {
	id = mem_antarans.95
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		create_country = {
			name = "The Dark Ones"
			type = mem_antarans
			flag = {
				icon = {
					category = "domination"
					file = "domination_21.dds"
				}
				background= {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors={
					"black"
					"dark_purple"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			set_country_flag = mem_antarans_country
			set_graphical_culture = fallen_empire_04
			save_event_target_as = mem_antarans_country
			IF = {
				limit = {
					NOT = {
						has_communications = ROOT
					}
				}
				establish_communications_no_message = ROOT
			}
		}
		capital_scope = {
			create_fleet = {
				name = "Raiders"
				settings = {
					spawn_debris = no 
					is_boss = no
				}
				effect = {
					set_owner = event_target:mem_antarans_country
					create_ship = {
						name = random
						design = "Glory"
						graphical_culture = "fallen_empire_04"
					}
					create_ship = {
						name = random
						design = "Glory"
						graphical_culture = "fallen_empire_04"
					}
					create_ship = {
						name = random
						design = "Glory"
						graphical_culture = "fallen_empire_04"
					}
					create_ship = {
						name = random
						design = "Glory"
						graphical_culture = "fallen_empire_04"
					}
					set_location = {
						target = PREV
						distance = 0
						angle = random 
					}
				}
			}
		}
	}
}

# Test Event deleting flagged objects
country_event = {
	id = mem_antarans.96
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_ambient_object = {
			limit = {
				has_ambient_object_flag = mem_antarans_test
			}
			destroy_ambient_object = THIS
		}
	}
}

# Test Event for the wormhole station
country_event = {
	id = mem_antarans.97
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				is_capital = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					create_ambient_object = { # TODO exchange that later with a custom made one from frog
						type = "mem_antaran_wormhole_station_object"
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 250
							angle = random
						}
						set_ambient_object_flag = mem_antarans_test
						save_event_target_as = mem_antarans_test
					}
				}
			}
		}
	}
}

# Test Event for the Rift
country_event = {
	id = mem_antarans.98
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				is_capital = yes
			}
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					create_ambient_object = { # TODO exchange that later with a custom made one from frog
						type = "mem_antaran_wormhole_small_object"
					}
					last_created_ambient_object = {
						set_location = {
							target = prev
							distance = 250
							angle = random
						}
						set_ambient_object_flag = mem_antarans_test
						save_event_target_as = mem_antarans_test
					}
				}
			}
		}
	}
}

#Test Event to show Targets
country_event = {
	id = mem_antarans.99
	title = "Antaran Test"
	desc = "All flags have been set"
	picture = GFX_evt_mem_space_battle
	
	is_triggered_only = yes
	
	immediate = {
		remove_point_of_interest = mem_antarans_target.1
		remove_point_of_interest = mem_antarans_target.2
		remove_point_of_interest = mem_antarans_target.3
		remove_point_of_interest = mem_antarans_target.4
		remove_point_of_interest = mem_antarans_target.5
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_1
			}
			save_event_target_as = mem_antarans_target_1
		}		
		create_point_of_interest = {
			id = mem_antarans_target.1
			name = "mem_antarans_target_1"
			desc = "mem_antarans_target_1_desc"
			location = event_target:mem_antarans_target_1
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_2
			}
			save_event_target_as = mem_antarans_target_2
		}		
		create_point_of_interest = {
			id = mem_antarans_target.2
			name = "mem_antarans_target_2"
			desc = "mem_antarans_target_2_desc"
			location = event_target:mem_antarans_target_2
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_3
			}
			save_event_target_as = mem_antarans_target_3
		}		
		create_point_of_interest = {
			id = mem_antarans_target.3
			name = "mem_antarans_target_3"
			desc = "mem_antarans_target_3_desc"
			location = event_target:mem_antarans_target_3
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_4
			}
			save_event_target_as = mem_antarans_target_4
		}		
		create_point_of_interest = {
			id = mem_antarans_target.4
			name = "mem_antarans_target_4"
			desc = "mem_antarans_target_4_desc"
			location = event_target:mem_antarans_target_4
		}
		random_country = {
			limit = {
				has_country_flag = mem_antarans_target_5
			}
			save_event_target_as = mem_antarans_target_5
		}		
		create_point_of_interest = {
			id = mem_antarans_target.5
			name = "mem_antarans_target_5"
			desc = "mem_antarans_target_5_desc"
			location = event_target:mem_antarans_target_5
		}
	}
	
	option = {
		name = "OK"
	}
}
