##########################
#        Surveyor        #
#   By ViolentBeetle     #
##########################

namespace = mem_surveyor

###################
### Base events ###
###################

#Initial issuing of orders. Don't feel safe enough to put it into initializer
event = {
    id = mem_surveyor.1
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_global_flag = mem_surveyor_is_present
        # exists = event_target:mem_surveyor_fleet
    }
    
    immediate = {
        random_country = {
            limit = { has_country_flag = mem_surveyor_country }
            random_owned_fleet = {
                fleet_event = { id = mem_surveyor.2 }
            }
        }
        log = "Initialized"
    }
}

#Fleet arrives in a system and consider what to do next
fleet_event = {
    id = mem_surveyor.2
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        owner = {
            is_country_type = mem_surveyor_country_green
        }
    }

    immediate = {
        solar_system = {
            save_event_target_as = surveyor_system
            set_star_flag = mem_surveyor_visited
            remove_star_flag = mem_surveyor_next_target
            log = "[This.GetName] visited"
            closest_system = { # Find the most appealing system
                limit = {
                    NOR = {
                        has_star_flag = mem_surveyor_visited
                        has_star_flag = hostile_system
                        has_star_flag = sealed_system
                        has_star_flag = lcluster
                    }
                    NAND = {
                        exists = space_owner
                        space_owner = {
                            OR = {
                                is_country_type = fallen_empire
                                is_country_type = awakened_empire
                                is_country_type = dormant_marauders
                                is_country_type = awakened_marauders
                                has_country_flag = mem_surveyor_attacked_surveyor
                            }
                        }
                    }
                }
                min_steps = 1
                max_steps = 1
                set_star_flag = mem_surveyor_next_target
            }
            #Various effects go here
            IF = {
                limit = { 
                    exists = space_owner 
                    space_owner = { is_country_type = default }
                }
                mem_surveyor_try_to_communicate = yes
            }
        }
        clear_fleet_actions = this
        queue_actions = {
            find_closest_system = { #Try to move to targeted system
                trigger = {
                    id = mem_surveyor.vanilla.1
                    has_star_flag = mem_surveyor_next_target
                }
                found_system = {
                    move_to = this
                    wait = 1
                    effect = {
                        id = mem_surveyor.vanilla.2
                        root = {
                            fleet_event = { id = mem_surveyor.2 }
                        }
                    }
                }
                failed = { #If no system is flagged, no system is valid
                    wait = { duration = 10 }

                    find_random_system = { #Go somewhere
                        trigger = {
                            id = mem_surveyor.vanilla.3
                            NOR = {
                                has_star_flag = mem_surveyor_visited
                                has_star_flag = hostile_system
                                has_star_flag = sealed_system
                                has_star_flag = lcluster
                            }
                            NAND = {
                                exists = space_owner
                                space_owner = {
                                    OR = {
                                        is_country_type = fallen_empire
                                        is_country_type = awakened_empire
                                        is_country_type = dormant_marauders
                                        is_country_type = awakened_marauders
                                        has_country_flag = mem_surveyor_attacked_surveyor
                                    }
                                }
                            }
                        }
                        found_system = {
                            effect = {
                                id = mem_surveyor.vanilla.4
                                log = "Setting location to [This.GetName]"
                                root = {
                                    solar_system = {
                                        IF = {
                                            limit = { exists = space_owner }
                                            space_owner = {
                                                random_list = {
                                                    15 = { country_event = { id = mem_surveyor.7 } }
                                                    85 = {}
                                                }
                                            }
                                        }
                                    }
                                    set_location = prev.star
                                    fleet_event = { id = mem_surveyor.2 }
                                }
                            }
                        }
                        failed = {
                            effect = {
                                id = mem_surveyor.vanilla.5
                                log = "Found nothing"
                                every_system = {
                                    limit = { has_star_flag = mem_surveyor_visited }
                                    remove_star_flag = mem_surveyor_visited
                                }
                                every_playable_country = {
                                    remove_country_flag = mem_surveyor_reward_wait
                                    remove_country_flag = mem_surveyor_offered_quest
                                }
                                owner = {
                                    change_variable = {
                                        which = mem_surveyor_iteration_count
                                        value = 1
                                    }
                                }
                                log = "Rebooting the cycle: [This.mem_surveyor_iteration_count]" 
                                fleet_event = { id = mem_surveyor.2 }
                            }
                        }
                    }
                }

            }
        }
    }
}

#Country event: Enigmatic spacefarers
country_event = {
    id = mem_surveyor.3
    title = mem_surveyor.3.name
    desc = mem_surveyor.3.desc

    is_triggered_only = yes

    trigger = {
        # log = "Trying to initiate first contact. [From.GetName]"
        FROM = { is_country_type = mem_surveyor_country_green }
        NOT = { has_country_flag = mem_surveyor_spotted_probe }
    }

    picture = GFX_evt_unknown_ships
    show_sound = event_radio_chatter
    location = FROMFROMFROM
    
    immediate = {
        set_country_flag = mem_surveyor_spotted_probe
        FROMFROMFROM = { save_event_target_as = surveyor_system }
    }

    option = {
        name = INTERESTING
    }
}

#Probe makes contact
country_event = {
    id = mem_surveyor.4
    title = mem_surveyor.4.name
    desc = mem_surveyor.4.desc

    is_triggered_only = yes

    picture = GFX_evt_unknown_ships
    show_sound = event_radio_chatter
    location = FROM

    trigger = {
        NOT = { has_country_flag = mem_surveyor_attacked_surveyor }
    }
    
    immediate = {
        set_country_flag = mem_surveyor_opened_comms
        establish_communications_no_message = FROM.owner
    }

    option = {
        name = ONSCREEN
        hidden_effect = {
            country_event = { id = mem_surveyor.5 }
        }
    }
}

#Probe greetings
country_event = {
    id = mem_surveyor.5
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.5.desc

    is_triggered_only = yes
    diplomatic = yes
    location = FROMFROM

    picture_event_data = {
		room = no_video_feed_room
    }
    
    option = {
        name = mem_surveyor.5.default
    }

    option = {
        name = mem_surveyor.5.ega
        trigger = {
            OR = {
                has_ethic = ethic_egalitarian
                has_ethic = ethic_fanatic_egalitarian
            }
        }
    }

    option = {
        name = mem_surveyor.5.aut
        trigger = {
            OR = {
                has_ethic = ethic_authoritarian
                has_ethic = ethic_fanatic_authoritarian
            }
        }
    }

    option = {
        name = mem_surveyor.5.mat
        trigger = {
            OR = {
                has_ethic = ethic_materialist
                has_ethic = ethic_fanatic_materialist
            }
        }
    }

    option = {
        name = mem_surveyor.5.spi
        trigger = {
            OR = {
                has_ethic = ethic_spiritualist
                has_ethic = ethic_fanatic_spiritualist
            }
        }
    }

    option = {
        name = mem_surveyor.5.pac
        trigger = {
            OR = {
                has_ethic = ethic_pacifist
                has_ethic = ethic_fanatic_pacifist
            }
        }
    }
    
    option = {
        name = mem_surveyor.5.mil
        trigger = {
            OR = {
                has_ethic = ethic_militarist
                has_ethic = ethic_fanatic_militarist
            }
        }
    }

    option = {
        name = mem_surveyor.5.phile
        trigger = {
            OR = {
                has_ethic = ethic_xenophile
                has_ethic = ethic_fanatic_xenophile
            }
        }
    }

    option = {
        name = mem_surveyor.5.phobe
        trigger = {
            OR = {
                has_ethic = ethic_xenophobe
                has_ethic = ethic_fanatic_xenophobe
            }
        }
    }

    option = {
        name = mem_surveyor.5.hive
        trigger = {
            has_authority = auth_hive_mind
        }
    }

    option = {
        name = mem_surveyor.5.machine
        trigger = {
            has_authority = auth_machine_intelligence
        }
    }

    option = {
        name = mem_surveyor.5.purifier
        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
        }
    }

    option = {
        name = mem_surveyor.5.terminator
        exclusive_trigger = {
            has_valid_civic = civic_machine_terminator
        }
    }

    option = {
        name = mem_surveyor.5.swarm
        exclusive_trigger = {
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Flag about attacking probe
country_event = {
    id = mem_surveyor.6
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        FROM = {
            OR = {
                is_country_type = mem_surveyor_country_green
                is_country_type = mem_surveyor_country_yellow
            }
        }
        NOT = { has_country_flag = mem_surveyor_attacked_surveyor }
    }

    immediate = {
        set_country_flag = mem_surveyor_attacked_surveyor
    }
}

#Country witnesses probe jumping away
country_event = {
    id = mem_surveyor.7
    title = mem_surveyor.7.name
    desc = mem_surveyor.7.desc

    picture = GFX_evt_wormhole

    is_triggered_only = yes

    trigger = {
        is_country_type = default
        has_established_contact = event_target:mem_surveyor_country
        NOR = {
            has_technology = tech_experimental_subspace_navigation
            has_tech_option = tech_experimental_subspace_navigation
        }
    }

    option = {
        name = mem_surveyor.7.a
        add_research_option = tech_experimental_subspace_navigation
    }
}

#####################################
### Diplomacy with friendly probe ###
#####################################

# Custom diplomacy with surveyor probe

country_event = {
    id = mem_surveyor.100
    title = MEM_SURVEYOR_PROBE_HEADER
    
    #Generic greets
    desc = {
        text = mem_surveyor.100.desc.1
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.2
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.3
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.4
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.5
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.6
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.7
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.8
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }
    desc = {
        text = mem_surveyor.100.desc.9
        trigger = { has_country_flag = mem_surveyor_generic_responses }
    }

    #Greets when away from the player space
    desc = {
        text = mem_surveyor.100.away.1
        trigger = {
            exists = event_target:mem_surveyor_fleet.solar_system
            mem_surveyor_in_owned_space = no
        }
    }

    #Greets when in player's space
    desc = {
        text = mem_surveyor.100.here.1
        trigger = {
            exists = event_target:mem_surveyor_fleet.solar_system
            mem_surveyor_in_owned_space = yes
        }
    }
    desc = {
        text = mem_surveyor.100.here.2
        trigger = {
            exists = event_target:mem_surveyor_fleet.solar_system
            mem_surveyor_in_owned_space = yes
        }
    }

    #Greets based on ethics, governments etc
    desc = {
        text = mem_surveyor.100.mat
        trigger = {
            is_materialist = yes
        }
    }
    desc = {
        text = mem_surveyor.100.spi
        trigger = {
            is_spiritualist = yes
        }
    }
    desc = {
        text = mem_surveyor.100.machine
        trigger = {
            has_authority = auth_machine_intelligence
        }
    }

    #Probe relates to its journeys
    desc = {
        text = mem_surveyor.100.journey.1
        trigger = {
            exists = event_target:next_target
        }
    }
    desc = {
        text = mem_surveyor.100.journey.2
        trigger = {
            exists = event_target:visited_system
        }
    }

    is_triggered_only = yes
    diplomatic = yes

    trigger = {
        FROM = { is_country_type = mem_surveyor_country_green }
        NOT = { has_country_flag = mem_surveyor_diplomacy_engaged }
        NOT = { has_country_flag = mem_surveyor_attacked_surveyor }
    }

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        set_country_flag = mem_surveyor_diplomacy_engaged
        random_list = {
            50 = { }
            50 = { set_country_flag = mem_surveyor_generic_responses }
        }
        random_system = {
            limit = { has_star_flag = mem_surveyor_next_target }
            save_event_target_as = next_target
        }
        random_system = {
            limit = { has_star_flag = mem_surveyor_visited }
            save_event_target_as = visited_system
        }
    }

    option = { #Tell us about the mission
        name = mem_surveyor.100.a
        is_dialog_only = yes
        response_text = mem_surveyor.100.a.answer
    }

    option = { #Tell us about the Alkree
        name = mem_surveyor.100.b        
        is_dialog_only = yes
        response_text = mem_surveyor.100.b.answer
    }

    option = { #All Alkree are dead
        name = mem_surveyor.100.c
        is_dialog_only = yes
        response_text = mem_surveyor.100.c.answer

        trigger = {
            has_country_flag = mem_surveyor_found_alkree_homeworld
        }
    }

    option = {
        name = MEM_SURVEYOR_EXIT
        default_hide_option = yes
        remove_country_flag = mem_surveyor_generic_responses
        remove_country_flag = mem_surveyor_diplomacy_engaged
    }
}

#Attempting diplo after attacking peaceful probe
country_event = {
    id = mem_surveyor.101
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.101.desc.1
    desc = mem_surveyor.101.desc.2
    desc = mem_surveyor.101.desc.3
    desc = mem_surveyor.101.desc.4

    is_triggered_only = yes
    diplomatic = yes

    trigger = {
        FROM = { is_country_type = mem_surveyor_country_green }
        NOT = { has_country_flag = mem_surveyor_diplomacy_engaged }
        has_country_flag = mem_surveyor_attacked_surveyor
    }

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        set_country_flag = mem_surveyor_diplomacy_engaged
    }

    option = {
        name = MEM_SURVEYOR_EXIT
        default_hide_option = yes
        remove_country_flag = mem_surveyor_generic_responses
        remove_country_flag = mem_surveyor_diplomacy_engaged
    }
}

#Country event selecting viable mission
country_event = {
    id = mem_surveyor.102
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_country_flag = mem_surveyor_offered_quest
        log = "[This.GetName] Is offered quest"
        random_list = { #Revise weights when all is done!!!
            1 = { country_event = { id = mem_surveyor.103 } } #Ask to share computation
            1 = { country_event = { id = mem_surveyor.104 } } #Ask for raw resources
            1 = { country_event = { id = mem_surveyor.105 } } #Ask to use a planet as amplifier
            1 = { country_event = { id = mem_surveyor.106 } } #Ask to use science ship to scan a unihabited planet
            1 = { country_event = { id = mem_surveyor.107 } } #Ask to perform a special project on owned planet
        }
    }
}

#Sending request for computation
country_event = {
    id = mem_surveyor.103
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.103.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.mission.accept

        add_modifier = {
            modifier = mem_surveyor_science_drain
            days = 360
        }
        set_country_flag = mem_surveyor_finished_quest
        set_country_flag = mem_surveyor_reward_wait
    }

    option = {
        name = mem_surveyor.mission.decline
        default_hide_option = yes
    }

    option = {
        name = mem_surveyor.mission.purifier

        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Sending request for raw resources
country_event = {
    id = mem_surveyor.104
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.104.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.mission.accept

        add_minerals = -500
        add_energy = -500
        
        set_country_flag = mem_surveyor_finished_quest
        set_country_flag = mem_surveyor_reward_wait

        allow = {
            energy > 499
            minerals > 499
        }
    }

    option = {
        name = mem_surveyor.mission.decline
        default_hide_option = yes
    }

    option = {
        name = mem_surveyor.mission.purifier

        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Ask to use a planet as amplifier
country_event = {
    id = mem_surveyor.105
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.105.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    trigger = {
        any_owned_planet = {
            is_capital = no
            NOR = {
                is_planet_class = pc_ringworld_habitable
                is_planet_class = pc_habitat
            }
        }
    }

    immediate = {
        random_owned_planet = {
            limit = {
                is_capital = no
                NOR = {
                    is_planet_class = pc_ringworld_habitable
                    is_planet_class = pc_habitat
                }
            }
            save_event_target_as = amplifier_planet
        }
    }

    option = {
        name = mem_surveyor.mission.accept

        event_target:amplifier_planet = {
            add_modifier = {
                modifier = mem_surveyor_amplified
                days = 360
            }
        }
    }

    option = {
        name = mem_surveyor.mission.decline
        default_hide_option = yes
    }

    option = {
        name = mem_surveyor.mission.purifier

        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Ask to scan a planet
country_event = {
    id = mem_surveyor.106
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.106.desc

    is_triggered_only = yes
    diplomatic = yes

    trigger = {
        any_planet_within_border = {
            OR = {
                is_planet_class = pc_barren
                is_planet_class = pc_barren_cold
                is_planet_class = pc_toxic
                is_planet_class = pc_frozen
                is_planet_class = pc_molten
                is_planet_class = pc_gas_giant
            }
        }
    }

    immediate = {
        random_planet_within_border = {
            limit = {
                OR = {
                    is_planet_class = pc_barren
                    is_planet_class = pc_barren_cold
                    is_planet_class = pc_toxic
                    is_planet_class = pc_frozen
                    is_planet_class = pc_molten
                    is_planet_class = pc_gas_giant
                }
            }
            save_event_target_as = scannable_planet
        }
    }

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.mission.accept
        set_country_flag = mem_surveyor_busy_with_project
        enable_special_project = {
            name = MEM_SURVEYOR_SCAN
            owner = root
            location = event_target:scannable_planet
        }
    }

    option = {
        name = mem_surveyor.mission.decline
        default_hide_option = yes
    }

    option = {
        name = mem_surveyor.mission.purifier

        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Ask to perform a project on capital
country_event = {
    id = mem_surveyor.107
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.107.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.mission.accept
        custom_tooltip = mem_surveyor.107.tooltip
        set_country_flag = mem_surveyor_busy_with_project

        hidden_effect = {
            random_list = {
                33 = {
                    enable_special_project = {
                        name = MEM_SURVEYOR_HELP_PHYSICS
                        owner = root
                        location = capital_scope
                    }
                }
                33 = {
                    enable_special_project = {
                        name = MEM_SURVEYOR_HELP_SOCIETY
                        owner = root
                        location = capital_scope
                    }
                }
                33 = {
                    enable_special_project = {
                        name = MEM_SURVEYOR_HELP_ENGINEERING
                        owner = root
                        location = capital_scope
                    }
                }
            }
        }
    }

    option = {
        name = mem_surveyor.mission.decline
        default_hide_option = yes
    }

    option = {
        name = mem_surveyor.mission.purifier

        exclusive_trigger = {
            has_valid_civic = civic_fanatic_purifiers
            has_valid_civic = civic_hive_devouring_swarm
        }
    }
}

#Scan is complete
ship_event = {
    id = mem_surveyor.108
    title = mem_surveyor.108.name
    desc = mem_surveyor.108.desc

    is_triggered_only = yes

    location = event_target:scannable_planet
    show_sound = event_scanner
    picture = GFX_evt_ship_in_orbit_2

    immediate = {
        owner = {
            remove_country_flag = mem_surveyor_busy_with_project
            set_country_flag = mem_surveyor_reward_wait
            set_country_flag = mem_surveyor_finished_quest
        }
    }

    option = {
        name = EXCELLENT
    }
}

#Calculation is complete
planet_event = {
    id = mem_surveyor.109
    title = mem_surveyor.109.name
    desc = mem_surveyor.109.desc

    is_triggered_only = yes

    location = ROOT
    show_sound = event_scanner
    picture = GFX_evt_physics_research

    immediate = {
        owner = {
            remove_country_flag = mem_surveyor_busy_with_project
            set_country_flag = mem_surveyor_reward_wait
            set_country_flag = mem_surveyor_finished_quest
        }
    }

    option = {
        name = EXCELLENT
    }
}

#Country event to determine which reward does the player get
country_event = {
    id = mem_surveyor.110
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        remove_country_flag = mem_surveyor_finished_quest
        set_timed_country_flag = {
            flag = mem_surveyor_collected_reward
            days = 3600
        }
        log = "[This.GetName] Collects Reward"
        random_list = { #Choosing the reward
            1 = { # Give survey data
                country_event = { id = mem_surveyor.111 }
                modifier = {
                    factor = 0
                    NOT = {
                        any_system = {
                            has_star_flag = mem_surveyor_visited
                            any_planet = {
                                is_surveyed = {
                                    who = ROOT
                                    status = no
                                }
                            }
                        }
                    }
                }
            }
            1 = { # Give contacts
                country_event = { id = mem_surveyor.112 }
                modifier = {
                    factor = 0
                    NOT = {
                        any_country = {
                            NOT = { is_same_value = root }
                            NOT = { has_established_contact = root }
                            OR = {
                                is_country_type = default
                                is_country_type = fallen_empire
                                is_country_type = enclave
                                is_country_type = dormant_marauders
                            }
                        }
                    }
                }
            }
            1 = { # Give science
                country_event = { id = mem_surveyor.113 }
            }
            1 = { # Give tech
                country_event = { id = mem_surveyor.114 }
                modifier = {
                    factor = 0
                    has_technology = tech_biolab_1
                    has_technology = tech_engineering_lab_1
                    has_technology = tech_lasers_2
                    has_technology = tech_physics_lab_1
                    has_technology = tech_sensors_2
                    has_technology = tech_wormhole_stabilization
                }
                modifier = {
                    factor = 0
                    check_variable = {
                        which = mem_surveyor_received_techs
                        value > 1
                    }
                }
            }
            1 = { # Give navigation data, increase speed temporarility
                country_event = { id = mem_surveyor.115 }
            }
            1 = { # Give deposit
                country_event = { id = mem_surveyor.116 }
                modifier = {
                    factor = 0
                    NOT = { #I don't know how could it possibly be so
                        any_planet_within_border = {
                            OR = {
                                is_planet_class = pc_barren
                                is_planet_class = pc_barren_cold
                                is_planet_class = pc_frozen
                                is_planet_class = pc_molten
                                is_planet_class = pc_toxic
                                is_planet_class = pc_gas_giant
                            }
                            is_colonizable = no
                            orbital_deposit_tile = {
                                has_deposit = no
                            }
                        }
                    }
                }
            }
        }
    }
}

#Giving survey data
country_event = {
    id = mem_surveyor.111
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.111.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        random_system = {
            limit = {
                has_star_flag = mem_surveyor_visited
                any_planet = {
                    is_surveyed = {
                        who = ROOT
                        status = no
                    }
                }
            }
            every_system_planet = {
                surveyed = {
                    set_surveyed = yes
                     surveyor = root
                 }
            }
        }

        random_list = {
            25 = {  }
            50 = {
                random_system = {
                    limit = {
                        has_star_flag = mem_surveyor_visited
                        any_planet = {
                            is_surveyed = {
                                who = ROOT
                                status = no
                            }
                        }
                    }
                    every_system_planet = {
                        surveyed = {
                            set_surveyed = yes
                             surveyor = root
                         }
                    }
                }
            }
            25 = {
                while = {
                    count = 2
                    random_system = {
                        limit = {
                            has_star_flag = mem_surveyor_visited
                            any_planet = {
                                is_surveyed = {
                                    who = ROOT
                                    status = no
                                }
                            }
                        }
                        every_system_planet = {
                            surveyed = {
                                set_surveyed = yes
                                 surveyor = root
                             }
                        }
                    }
                }
            }
        }
    }

    option = {
        name = mem_surveyor.111.a
    }
}

#Give contact
country_event = {
    id = mem_surveyor.112
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = {
        text = mem_surveyor.112.desc.default
        trigger = {
            event_target:contact_country = {
                is_country_type = default
            }
        }
    }
    desc = {
        text = mem_surveyor.112.desc.fallen
        trigger = {
            event_target:contact_country = {
                is_country_type = fallen
            }
        }
    }
    desc = {
        text = mem_surveyor.112.desc.enclave
        trigger = {
            event_target:contact_country = {
                is_country_type = enclave
            }
        }
    }
    desc = {
        text = mem_surveyor.112.desc.mara
        trigger = {
            event_target:contact_country = {
                is_country_type = dormant_marauders
            }
        }
    }

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        random_country = {
            limit = {
                NOT = { is_same_value = root }
                NOT = { has_established_contact = root }
                OR = {
                    is_country_type = default
                    is_country_type = fallen_empire
                    is_country_type = enclave
                    is_country_type = dormant_marauders
                }
            }
            save_event_target_as = contact_country
            establish_communications_no_message = root
        }
    }

    option = {
        name = mem_surveyor.112.a
        custom_tooltip = mem_surveyor.112.a.tooltip
    }
}

#Probe dispenses science
country_event = {
    id = mem_surveyor.113
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.113.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.113.a

        add_monthly_resource_mult = {
			resource = physics_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
        add_monthly_resource_mult = {
			resource = society_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
        add_monthly_resource_mult = {
			resource = engineering_research
			value = @tier4researchreward
			min = @tier4researchmin
			max = @tier4researchmax
		}
    }
}

#Probe gives tech
country_event = {
    id = mem_surveyor.114
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.114.desc

    is_triggered_only = yes
    diplomatic = yes

    immediate = {
        change_variable = {
            which = mem_surveyor_received_techs
            value = 1
        }
    }

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.114.a
        random_list = {
            4 = {
                give_technology = { tech = tech_lasers_2 }
                modifier = {
                    factor = 0
                    has_technology = tech_lasers_2
                }
            }
            4 = {
                give_technology = { tech = tech_physics_lab_1 }
                modifier = {
                    factor = 0
                    has_technology = tech_physics_lab_1
                }
            }
            4 = {
                give_technology = { tech = tech_biolab_1 }
                modifier = {
                    factor = 0
                    has_technology = tech_biolab_1
                }
            }
            4 = {
                give_technology = { tech = tech_engineering_lab_1 }
                modifier = {
                    factor = 0
                    has_technology = tech_physics_lab_1
                }
            }
            4 = {
                give_technology = { tech = tech_sensors_2 }
                modifier = {
                    factor = 0
                    has_technology = tech_sensors_2
                }
            }
            1 = {
                give_technology = { tech = tech_wormhole_stabilization }
                modifier = {
                    factor = 0
                    has_technology = tech_wormhole_stabilization
                }
            }
        }
    }
}

#Probe gives away modifier
country_event = {
    id = mem_surveyor.115
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.115.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = mem_surveyor.115.a
        add_modifier = {
            modifier = mem_surveyor_star_data
            days = 1800
        }
    }
}

#Probe gives away depoosit
country_event = {
    id = mem_surveyor.116
    title = MEM_SURVEYOR_PROBE_HEADER
    desc = mem_surveyor.116.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        random_planet_within_border = {
            limit = {
                OR = {
                    is_planet_class = pc_barren
                    is_planet_class = pc_barren_cold
                    is_planet_class = pc_frozen
                    is_planet_class = pc_molten
                    is_planet_class = pc_toxic
                    is_planet_class = pc_gas_giant
                }
                is_colonizable = no
                orbital_deposit_tile = {
                    has_deposit = no
                }
            }
            save_event_target_as = target_planet
        }
    }

    option = {
        name = mem_surveyor.116.a
        custom_tooltip = mem_surveyor.116.tooltip

        hidden_effect = {
            event_target:target_planet = {
                orbital_deposit_tile = {
                    random_list = {
                        1 = { add_deposit = d_immense_energy_deposit }
                        1 = { add_deposit = d_immense_mineral_deposit }
                        1 = { add_deposit = d_immense_society_deposit }
                        1 = { add_deposit = d_immense_physics_deposit }
                        1 = { add_deposit = d_immense_engineering_deposit }
                    }
                }
            }
        }
    }
}

######################
### BERSERKER MODE ###
######################

#Midgame start - decide if flippage should occur (Can also be rewritten to trigger event)

event = {
    id = mem_surveyor.200
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        any_country = {
            is_country_type = mem_surveyor_country_green
        }
    }

    immediate = {
        random_country = {
            limit = {
                is_country_type = mem_surveyor_country_green
            }
            random_list = { #Make sure to adjust weights!!!
                0 = {}
                50 = {
                    set_country_flag = mem_surveyor_will_go_berserk
                }
            }
        }
    }
}

# Probe decides to flip
country_event = {
    id = mem_surveyor.201
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        is_country_type = mem_surveyor_country_green
        has_country_flag = mem_surveyor_will_go_berserk
    }

    mean_time_to_happen = {
        years = 1 #Change to something sensible!
    }

    immediate = {
        set_country_type = mem_surveyor_country_red
        change_country_flag = {
            icon = {
                category = "ornate"
                file = "flag_ornate_4.dds"
            }
            background= {
                category = "backgrounds"
                file = "new_dawn.dds"
            }
            colors={
                "red"
                "red_orange"
                "null"
                "null"
            }
        }
        every_playable_country = {
            limit = {
                is_ai = no
                has_established_contact = root
            }
            country_event = { id = mem_surveyor.202 } #Players get notified
        }
        random_owned_fleet = {
            fleet_event = { id = mem_surveyor.210 }
        }
    }
}

# Diplomatic event to notify player 
country_event = {
    id = mem_surveyor.202
    title = MEM_SURVEYOR_BERSERK_HEADER
    desc = mem_surveyor.202.desc

    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
		room = no_video_feed_room
    }

    option = {
        name = MEM_SURVEYOR_EXIT
    }
}

# Custom diplomacy with the berserker

country_event = {
    id = mem_surveyor.203
    title = MEM_SURVEYOR_BERSERK_HEADER
    desc = mem_surveyor.203.desc.1
    desc = mem_surveyor.203.desc.2
    desc = mem_surveyor.203.desc.3
    desc = mem_surveyor.203.desc.4
    desc = mem_surveyor.203.desc.5

    is_triggered_only = yes
    diplomatic = yes

    trigger = {
        FROM = { is_country_type = mem_surveyor_country_red }
        NOT = { has_country_flag = mem_surveyor_diplomacy_engaged }
    }

    picture_event_data = {
		room = no_video_feed_room
    }

    immediate = {
        set_country_flag = mem_surveyor_diplomacy_engaged
    }

    option = { #All Alkree are dead
        name = mem_surveyor.203.a
        is_dialog_only = yes
        response_text = mem_surveyor.203.a.answer

        trigger = {
            has_country_flag = mem_surveyor_found_alkree_homeworld
        }
    }

    option = {
        name = MEM_SURVEYOR_EXIT
        default_hide_option = yes
        remove_country_flag = mem_surveyor_generic_responses
        remove_country_flag = mem_surveyor_diplomacy_engaged
    }
}



# Probe decision making - main cycle
fleet_event = {
    id = mem_surveyor.210
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        owner = {
            is_country_type = mem_surveyor_country_red
        }
    }

    immediate = {
        IF = {
            limit = {
                solar_system = {
                    any_planet = {
                        NOT = { has_planet_flag = mem_surveyor_is_being_attacked }
                        exists = owner
                        owner = {
                            OR = {
                                is_country_type = default
                                is_country_type = primitive
                            }
                        }
                    }
                }
            }
            clear_fleet_actions = yes
            queue_actions = {
                find_closest_planet = {
                    trigger = {
                        id = mem_surveyor.bersker.trigger.1
                        exists = owner
                        owner = {
                            OR = {
                                is_country_type = default
                                is_country_type = primitive
                            }
                        }
                    }
                    found_planet = {
                        move_to = this
                        orbit_planet = this
                        effect = {
                            id = mem_surveyor.bersker.trigger.2
                            set_planet_flag = mem_surveyor_is_being_attacked
                        }
                    }
                }
            }
        }
    }
}



