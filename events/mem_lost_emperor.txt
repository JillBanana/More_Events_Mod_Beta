
##########################
###  The Lost Emperor  ###
###  by Caligula       ###
##########################

namespace = mem_lost_emperor

#How much % of the empire ascends
@mem_lost_emperor_ascension_percentage = 0.25

@MEM_major_neoch_reward = 24
@MEM_minor_neoch_reward = 6


#On_game_start
event = {
	id = mem_lost_emperor.1000
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		#disable in multiplayers and for gestalts
		any_country = {
			is_ai = no
			NOR = {
				has_ethic = ethic_gestalt_consciousness
				any_country = {
					NOT = {
						is_same_value = prev
					}
					is_ai = no
				}
			}
		}
	}
	
	immediate = {
		random_list = {
			2 = { } #too bad
			1 = {
				every_country = {
					limit = { is_ai = no }

					closest_system = {
						limit = {
							NOT = {
								exists = owner
							}
							is_planet_class = pc_neutron_star
							NOT = {
								OR = {
									any_planet = {
										OR = {
											is_colonizable = yes
											is_colony = yes
										}
									}
									has_star_flag = enclave
								}
							}
						}
						add_anomaly = mem_lost_emperor_category
					}
				}
			}
		}
	}
}


ship_event = {
	id = mem_lost_emperor.1
	title = mem_lost_emperor.1.name
	desc = mem_lost_emperor.1.desc
	picture = GFX_evt_enigmatic_cache

	is_triggered_only = yes

	immediate = {
		solar_system = {
			save_event_target_as = mem_lost_emperor_system
		}
	}

	option = { #Leave be
		name = mem_lost_emperor.1.A
	}
	
	option = { #Check it out
		name = mem_lost_emperor.1.B

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.2 }
		}
	}
	
	option = { #Establish Comms
		name = mem_lost_emperor.1.C

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.4 }
		}
	}
}

#Check it out
ship_event = {
	id = mem_lost_emperor.2
	title = mem_lost_emperor.2.name
	desc = mem_lost_emperor.2.desc
	picture = GFX_evt_enigmatic_cache

	is_triggered_only = yes

	option = { #Leave be
		name = mem_lost_emperor.2.A
	}
	
	option = { #Check it out
		name = mem_lost_emperor.2.B

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.3 }
		}
	}
	
	option = { #Establish Comms
		name = mem_lost_emperor.2.C

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.4 }
		}
	}
}

ship_event = {
	id = mem_lost_emperor.3
	title = mem_lost_emperor.3.name
	desc = mem_lost_emperor.3.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	immediate = {
		destroy_ship = this
	}

	option = { #Leave be
		name = mem_lost_emperor.3.A
	}
	
	option = { #Send military next time
		name = mem_lost_emperor.3.B

		enable_special_project = {
			name = mem_lost_emperor_military_investigate
			location = event_target:mem_lost_emperor_system.star
		}
	}
}

#Establish comms
ship_event = {
	id = mem_lost_emperor.4
	title = mem_lost_emperor.4.name
	desc = mem_lost_emperor.4.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	#Dialogues
	option = {
		name = mem_lost_emperor.4.A.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.B.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.C.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.D.dialogue
		response_text = mem_lost_emperor.4.D.response

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.E.dialogue
		response_text = mem_lost_emperor.4.E.response

		is_dialog_only = yes
	}

	#Actions
	
	option = { #Whatever
		name = mem_lost_emperor.4.F.action
		
		hidden_effect = {
			ship_event = { id = mem_lost_emperor.3 }
		}
	}
	
	option = { #Leave be
		name = mem_lost_emperor.4.G.action

	}
	
	option = { #Return with military
		name = mem_lost_emperor.4.H.action

		custom_tooltip = mem_lost_emperor.4.H.action.tooltip

		enable_special_project = {
			name = mem_lost_emperor_military_investigate
			location = event_target:mem_lost_emperor_system.star
		}
	}
}


#Azran activates itself
ship_event = {
	id = mem_lost_emperor.5
	title = mem_lost_emperor.5.name
	desc = {
		trigger = {
			owner = {
				NOT = {
					has_country_flag = mem_azran_failed_before
				}
			}
		}
		text = mem_lost_emperor.5.desc
	}
	desc = {
		trigger = {
			owner = {
				has_country_flag = mem_azran_failed_before
			}
		}
		text = mem_lost_emperor.5.desc.again
	}
	picture = GFX_evt_unknown_ships

	is_triggered_only = yes

	immediate = {
		solar_system.star = {
			create_country = {
				type = mem_azran
				name = "Azran"
				effect = {
					set_country_flag = mem_azran
				}
			}
			create_fleet = {
				name = "Azran"

				settings = {
					spawn_debris = no

					#Todo: Enable this once I am satisfied that I have made a very strong but beatable foe
#					is_boss = yes
				}

				effect = {
					set_owner = last_created_country

					create_ship_design = {
						design = "NAME_Azran"
					}
					create_ship = {
						name = "NAME_Azran"
						design = last_created_design
						upgradable = no
					}

					set_location = prev
				}
			}
		}
	}

	option = {
		name = mem_lost_emperor.5.option
	}
}

#You lost to Azran
# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = mem_lost_emperor.6
	title = mem_lost_emperor.6.name
	desc = mem_lost_emperor.6.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	trigger = {
		from = {
			has_country_flag = mem_azran
		}
	}

	immediate = {
		set_country_flag = mem_azran_failed_before
		fromfromfrom = {
			solar_system = {
				save_event_target_as = mem_lost_emperor_system
			}
			delete_fleet = this
		}
		from = {
			destroy_country = yes
		}
	}

	option = { #we will return in greater force
		name = mem_lost_emperor.6.A
		
		enable_special_project = {
			name = mem_lost_emperor_military_investigate_1
			location = event_target:mem_lost_emperor_system.star
		}
	}
	option = { #that's enough of this
		name = mem_lost_emperor.6.B
	}
}

#You defeated Azran
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = mem_lost_emperor.7
	title = mem_lost_emperor.7.name
	desc = mem_lost_emperor.7.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	trigger = {
		from = {
			has_country_flag = mem_azran
		}
	}

	immediate = {
		fromfrom = {
			save_event_target_as = mem_azran_vanquisher_fleet
		}
	}

	option = { #we will return in greater force
		name = mem_lost_emperor.7.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.8 }
		}
	}
}


#Establish comms with Neochadanus
country_event = {
	id = mem_lost_emperor.8
	title = mem_lost_emperor.8.name
	desc = mem_lost_emperor.8.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	immediate = {
		mem_create_neochadanus = yes
	}

	option = {
		name = mem_lost_emperor.8.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.9 }
		}
	}
}


country_event = {
	id = mem_lost_emperor.9
	title = mem_lost_emperor.9.name
	desc = mem_lost_emperor.9.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = { #You are insane
		name = mem_lost_emperor.9.A
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.10 }
		}
	}
	
	option = { #OK emperor talk please
		name = mem_lost_emperor.9.B
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.11 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.10
	title = mem_lost_emperor.10.name
	desc = mem_lost_emperor.10.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = { #This convo is over
		name = mem_lost_emperor.10.A
		
		hidden_effect = {
			set_timed_country_flag = {
				flag = mem_scorned_neochadanus
				days = 5				
			}
			country_event = { id = mem_lost_emperor.20 }
		}
	}
	
	option = { #OK emperor talk please
		name = mem_lost_emperor.10.B
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.11 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.11
	title = mem_lost_emperor.11.name
	desc = mem_lost_emperor.11.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.11.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.12 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.12
	title = mem_lost_emperor.12.name
	desc = mem_lost_emperor.12.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.12.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.13 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.13
	title = mem_lost_emperor.13.name
	desc = mem_lost_emperor.13.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.13.option
		response_text = mem_lost_emperor.13.response
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.20 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.20
	title = mem_lost_emperor.20.name
	desc = {
		trigger = {
			NOT = {
				has_country_flag = mem_scorned_neochadanus
			}
		}
		text = mem_lost_emperor.20.desc
	}
	desc = {
		trigger = {
			has_country_flag = mem_scorned_neochadanus
		}
		text = mem_lost_emperor.20.desc.scorned
	}

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	#For the crazy option
	immediate = {
		event_target:mem_azran_vanquisher_fleet = {
			if = {
				limit = {
					any_owned_ship = {
						is_ship_size = corvette
					}
				}
				random_owned_ship = {
					limit = {
						is_ship_size = corvette
					}
					save_event_target_as = mem_neochadanus_ship
				}
			}
			else = {
				random_owned_ship = {
					save_event_target_as = mem_neochadanus_ship
				}
			}
		}
	}

	option = {
		name = mem_lost_emperor.20.accept
		custom_tooltip = mem_lost_emperor.20.accept.tooltip

		hidden_effect = {
			set_leader = Neochadanus

			set_country_flag = mem_emperor_is_neochadanus
			set_timed_country_flag = {
				flag = mem_emperor_is_neochadanus_fifty
				years = 50
			}
		}
		
		if = {
			limit = {
				NOT = {
					has_authority = auth_imperial
				}
			}
			if = {
				limit = {
					NOR = {
						has_ethic = ethic_authoritarian
						has_ethic = ethic_fanatic_authoritarian
					}
				}
				shift_ethic = ethic_authoritarian
			}

			change_government = {
				authority = auth_imperial
			}
		}

		custom_tooltip = mem_lost_emperor.20.accept.tooltip2

		response_text = mem_lost_emperor.20.accept.response
	}
	
	option = {
		name = mem_lost_emperor.20.suggest

		response_text = mem_lost_emperor.20.suggest.response

		is_dialog_only = yes

		trigger = {
			NOT = {
				has_authority = auth_imperial
			}
		}
	}
	
	option = {
		name = mem_lost_emperor.20.imprison
		custom_tooltip = mem_lost_emperor.20.imprison.tooltip

		hidden_effect = {
			country_event = { id = mem_lost_emperor.21 }
			event_target:mem_azran_vanquisher_fleet = {
				set_fleet_flag = mem_neochadanus_carrying_fleet

				set_event_locked = yes

				queue_actions = {
					move_to = root.capital_scope

					effect = {
						id = mem_lost_emperor.action.1
						remove_fleet_flag = mem_neochadanus_carrying_fleet
						set_event_locked = no
						root = {
							country_event = { id = mem_lost_emperor.25 }
						}
					}
				}
			}
		}
		
		response_text = mem_lost_emperor.20.imprison.response
	}
	
	option = {
		name = mem_lost_emperor.20.dissemble

		random_list = {
			2 = {
				custom_tooltip = mem_lost_emperor.20.dissemble.tooltip.success
				hidden_effect = {
					country_event = { id = mem_lost_emperor.40 }
				}
			}
			1 = {
				custom_tooltip = mem_lost_emperor.20.dissemble.tooltip.fail
				hidden_effect = {
					event_target:mem_azran_vanquisher_fleet = {
						fleet_event = { id = mem_lost_emperor.29 }
					}
				}
			}
		}

		response_text = mem_lost_emperor.20.dissemble.response
	}
	
	option = {
		name = mem_lost_emperor.20.destroy
		custom_tooltip = mem_lost_emperor.20.destroy.tooltip

		add_monthly_resource_mult = {
			resource = physics_research
			value = @MEM_minor_neoch_reward
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @MEM_minor_neoch_reward
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @MEM_minor_neoch_reward
		}
		
		response_text = mem_lost_emperor.20.destroy.response
	}
	
	option = {
		name = mem_lost_emperor.20.release
		hidden_effect = {
			mem_neochadanus_seizes_ship_and_flees = yes

			set_timed_country_flag = {
				flag = mem_neochadanus_not_scorned
				days = 360
			}
		}

		custom_tooltip = mem_lost_emperor.20.release.1
		custom_tooltip = mem_lost_emperor.20.release.2
	}
}




######Imprison subchain

#Simple notification
country_event = {
	id = mem_lost_emperor.21
	title = mem_lost_emperor.21.name
	desc = mem_lost_emperor.21.desc
	picture = GFX_evt_ship_in_orbit
	
	is_triggered_only = yes
	
	option = {
		name = OK
	}
}


#Escapes

# A fleet has entered a system
# Scope = Fleet
# From = System
fleet_event = {
	id = mem_lost_emperor.22
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_fleet_flag = mem_neochadanus_carrying_fleet
		
		owner = {
			num_owned_planets > 1
			any_owned_planet = {
				solar_system = {
					NOT = {
						is_same_value = prevprev.solar_system
					}
				}
			}
		}
	}

	immediate = {
		random_list = {
			35 = {
				fleet_event = { id = mem_lost_emperor.23 }
			}
			965 = { }
		}
	}
}

#FromFrom = system
fleet_event = {
	id = mem_lost_emperor.23
	title = mem_lost_emperor.23.name
	desc = mem_lost_emperor.23.desc
	picture = GFX_evt_federation_fleet
	
	is_triggered_only = yes
	
	immediate = {
		mem_neochadanus_seizes_ship_and_flees = yes
	}
	
	option = {
		name = WORRYING
		custom_tooltip = mem_lost_emperor.23.tooltip
	}
}





#Made it home
country_event = {
	id = mem_lost_emperor.25
	title = mem_lost_emperor.25.name
	desc = mem_lost_emperor.25.desc
	picture = TODO

	is_triggered_only = yes

	option = {
		name = EXCELLENT
		add_modifier = {
			modifier = mem_lost_emperor_fount_of_knowledge_modifier
			days = -1
		}
	}
}










#Negative follow-up to .20.dissemble
fleet_event = {
	id = mem_lost_emperor.29
	title = mem_lost_emperor.29.name
	desc = mem_lost_emperor.29.desc
	picture = GFX_evt_federation_fleet
	
	is_triggered_only = yes
	
	immediate = {
		mem_neochadanus_seizes_ship_and_flees = yes
	}
	
	option = {
		name = WORRYING
		custom_tooltip = mem_lost_emperor.29.tooltip
	}
}


##### Neochadanus Escaped, seized a planet 

planet_event = {
	id = mem_lost_emperor.30
	title = mem_lost_emperor.30.name
	desc = mem_lost_emperor.30.desc
	picture = TODO
	
	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
		exists = owner
		owner = {
			is_same_value = event_target:mem_neochadanus_victim_country
		}
	}
	
	immediate = {
		create_country = {
			#Neochadanus stuff!
			type = mem_neochadanus_ascendant

			name = mem_neochadanus_country_name
			
			authority = auth_imperial
			ethics = {
				ethic = ethic_authoritarian
				ethic = ethic_spiritualist
				ethic = ethic_militarist
			}
			
			civic = mem_neochadanus_civic_1
			civic = mem_neochadanus_civic_2
			civic = mem_neochadanus_civic_3
			
			species = "Immortals"
			
			effect = {
				save_event_target_as = mem_neochadanus_ascendant
				
				#does this work?
				set_leader = Neochadanus
				
				add_modifier = { #ethics pull and unrest annihilated
					modifer = mem_neochadanus_setup_boost
					days = 4800
				}
				
				root = {					
					if = {
						limit = {
							NOT = {
								is_ecumenopolis = yes
							}
						}
						change_planet_size = 4
						
						add_modifier = { #these are too dangerous to not limit to one planet
							modifer = mem_neochadanus_setup_boost_planet
							days = 4800
						}
					}
				
					set_owner = prev
					
					solar_system.starbase = {
						set_owner = prevprev
						set_starbase_size = starbase_citadel
						
						set_starbase_module = {
							slot = 1
							module = shipyard
						}
						set_starbase_module = {
							slot = 2
							module = shipyard
						}
						set_starbase_module = {
							slot = 3
							module = shipyard
						}
						set_starbase_module = {
							slot = 4
							module = anchorage
						}
						set_starbase_module = {
							slot = 5
							module = trading_hub
						}
						set_starbase_module = {
							slot = 6
							module = trading_hub
						}
						
						set_starbase_building = {
							slot = 1
							building = crew_quarters
						}
						set_starbase_building = {
							slot = 2
							building = hydroponics_bay
						}
						set_starbase_building = {
							slot = 3
							building = fleet_academy
						}
						set_starbase_building = {
							slot = 4
							building = target_uplink_computer
						}
						
						#is that all slots covered?
					}
				}
				
				event_target:mem_neochadanus_victim_country = {
					every_relation = {
						establish_communications_no_message = prevprev
						country_event = { id = mem_lost_emperor.31 } #tell them about it
					}
					establish_communications_no_message = prev
				}
				
				give_neochadanus_resources = yes
				
				set_timed_country_flag = {
					flag = mem_neochadanus_ascendant_timer
					years = 50
				}
				
				if = {
					limit = {
						NOT = {
							has_country_flag = mem_neochadanus_not_scorned
						}
					}
					add_opinion_modifier = {
						who = event_target:mem_neochadanus_victim_country
						modifier = mem_neochadanus_scorned
					}
				}
				
				while = {
					count = 4
					
					closest_system = {
						limit = {
							is_owned_by = event_target:mem_neochadanus_victim_country
							has_owner = no
						}
						max_steps = 1
						starbase = {
							set_owner = event_target:mem_neochadanus_ascendant
						}
					}
				}
			}
		}
	}
	
	option = { #we must recover this lost territory!
		name = mem_lost_emperor.30.A
		
		hidden_effect = {
			solar_system = {
				add_claims = {
					who = event_target:mem_neochadanus_victim_country
				}
			}
		}
		event_target:mem_neochadanus_victim_country = {
			declare_war = {
				target = event_target:mem_neochadanus_ascendant
				attacker_war_goal = wg_conquest
				
			}
		}
	}
	
	option = { #let's see how this develops
		name = mem_lost_emperor.30.B
	}
}



country_event = {
	id = mem_lost_emperor.38

	hide_window = yes
	
	mean_time_to_happen = {
		years = 10
	}

	trigger = {
		is_country_type = mem_neochadanus_ascendant
		is_subject = no
		is_at_war = no
	}
	
	immediate = {
		effects = yes #all planets ascend, the empire disappears
		
		every_relation = {
			country_event = { id = mem_lost_emperor.39 }
		}
	}
}




#Disassemble Positive Outcome
country_event = {
	id = mem_lost_emperor.40
	title = mem_lost_emperor.40.name
	desc = mem_lost_emperor.40.desc
	picture = TODO	
	
	is_triggered_only = yes

	option = {
		name = EXCELLENT
		
		add_monthly_resource_mult = {
			resource = physics_research
			value = @MEM_major_neoch_reward
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = @MEM_major_neoch_reward
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = @MEM_major_neoch_reward
		}
		
		switch = {
			trigger = has_technology
			
			stuff = yes #(the levels of robotics + default)
		}
	}
}






#Fallback in case dies for some reason
country_event = {
	id = mem_lost_emperor.800
	title = mem_lost_emperor.800.name
	desc = mem_lost_emperor.800.desc
	picture = GFX_evt_space_funeral
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = mem_emperor_is_neochadanus
		from = {
			has_leader_flag = mem_neochadanus
		}
	}
	
	immediate = {
		remove_country_flag = mem_emperor_is_neochadanus
	}
	
	option = {
		name = mem_lost_emperor.800.option
	}
}




#50 years at least after you get Neochadanus
country_event = {
	id = mem_lost_emperor.900
	title = mem_lost_emperor.900.name
	desc = mem_lost_emperor.900.desc
	
	diplomatic = yes

	picture_event_data = {
		room = root.ruler
		portrait = root		
		planet_background = root
		graphical_culture = root
		city_level = root
	}

	mean_time_to_happen = {
		years = 10
	}

	trigger = {
		has_country_flag = mem_emperor_is_neochadanus
		ruler = {
			has_leader_flag = mem_neochadanus
		}
		NOR = {
			has_country_flag = mem_emperor_is_neochadanus_fifty
			any_country = {
				OR = {
					is_crisis_faction = yes
					
					AND = {
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
							is_country_type = awakened_fallen_empire
						}
						relative_power = {
							who = root
							value = overwhelming
						}
					}
				}
			}
		}
		num_owned_planets > 1
	}

	immediate = {
		effects = yes #actually options needed
	}

	option = {
		name = mem_lost_emperor.900.A

		add_modifier = {
			modifier = mem_lost_emperor_paying_for_ascension
			days = 3600
		}

		custom_tooltip = mem_lost_emperor.900.A.tooltip

		hidden_effect = {
			country_event = { id =  mem_lost_emperor.901 days = 3600 }
		}

		response_text = mem_lost_emperor.900.A.response
	}
	
	option = {
		name = mem_lost_emperor.900.B

		hidden_effect = {
			country_event = { id =  mem_lost_emperor.902 days = 1800 }
		}

		response_text = mem_lost_emperor.900.B.response
	}
}

#Portion of empire ascends

country_event = {
	id = mem_lost_emperor.999

	is_triggered_only = yes

	trigger = {
		num_owned_planets > 1
	}

	immediate = {
				
		while = {
			limit = {
				any_owned_planet = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
			}
			random_owned_planet = {
				limit = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
				set_timed_planet_flag = {
					flag = mem_lost_emperor_planet_counted
					days = 3600
				}
			}
			change_variable = {
				which = mem_lost_emperor_planets_count
				value = @mem_lost_emperor_ascension_percentage
			}
		}
		if = {
			limit = {
				check_variable = {
					which = mem_lost_emperor_planets_count
					value < 1
				}
			}
			set_variable = {
				which = mem_lost_emperor_planets_count
				value = 1
			}
		}

		capital_scope = {
			effects = yes
		}
		change_variable = {
			which = mem_lost_emperor_planets_count
			value = -1
		}
		while = {
			limit = {
				check_variable = {
					which = mem_lost_emperor_planets_count
					value > 0.99
				}
			}
			random_owned_planet = {
				limit = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
				effects = yes
			}
			change_variable = {
				which = mem_lost_emperor_planets_count
				value = -1
			}
		}
	}
}


#try this:
#remove_planet = yes