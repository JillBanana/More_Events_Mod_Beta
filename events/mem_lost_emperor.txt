
##########################
###  The Lost Emperor  ###
###  by Caligula       ###
##########################

namespace = mem_lost_emperor

#How much % of the empire ascends
@mem_lost_emperor_ascension_percentage = 0.25


ship_event = {
	id = mem_lost_emperor.1
	title = mem_lost_emperor.1.name
	desc = mem_lost_emperor.1.desc
	picture = GFX_evt_enigmatic_cache

	is_triggered_only = yes

	immediate = {
		solar_system = {
			save_event_target_as = mem_lost_emperor_system
		}
	}

	option = { #Leave be
		name = mem_lost_emperor.1.A
	}
	
	option = { #Check it out
		name = mem_lost_emperor.1.B

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.2 }
		}
	}
	
	option = { #Establish Comms
		name = mem_lost_emperor.1.C

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.4 }
		}
	}
}

#Check it out
ship_event = {
	id = mem_lost_emperor.2
	title = mem_lost_emperor.2.name
	desc = mem_lost_emperor.2.desc
	picture = GFX_evt_enigmatic_cache

	is_triggered_only = yes

	option = { #Leave be
		name = mem_lost_emperor.2.A
	}
	
	option = { #Check it out
		name = mem_lost_emperor.2.B

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.3 }
		}
	}
	
	option = { #Establish Comms
		name = mem_lost_emperor.2.C

		hidden_effect = {
			ship_event = { id = mem_lost_emperor.4 }
		}
	}
}

ship_event = {
	id = mem_lost_emperor.3
	title = mem_lost_emperor.3.name
	desc = mem_lost_emperor.3.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	immediate = {
		destroy_ship = this
	}

	option = { #Leave be
		name = mem_lost_emperor.3.A
	}
	
	option = { #Send military next time
		name = mem_lost_emperor.3.B

		enable_special_project = {
			name = mem_lost_emperor_military_investigate
			location = event_target:mem_lost_emperor_system.star
		}
	}
}

#Establish comms
ship_event = {
	id = mem_lost_emperor.4
	title = mem_lost_emperor.4.name
	desc = mem_lost_emperor.4.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	#Dialogues
	option = {
		name = mem_lost_emperor.4.A.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.B.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.C.dialogue
		response_text = mem_lost_emperor.classified

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.D.dialogue
		response_text = mem_lost_emperor.4.D.response

		is_dialog_only = yes
	}
	option = {
		name = mem_lost_emperor.4.E.dialogue
		response_text = mem_lost_emperor.4.E.response

		is_dialog_only = yes
	}

	#Actions
	
	option = { #Whatever
		name = mem_lost_emperor.4.F.action
		
		hidden_effect = {
			ship_event = { id = mem_lost_emperor.3 }
		}
	}
	
	option = { #Leave be
		name = mem_lost_emperor.4.G.action

	}
	
	option = { #Return with military
		name = mem_lost_emperor.4.H.action

		custom_tooltip = mem_lost_emperor.4.H.action.tooltip

		enable_special_project = {
			name = mem_lost_emperor_military_investigate
			location = event_target:mem_lost_emperor_system.star
		}
	}
}


#Azran activates itself
ship_event = {
	id = mem_lost_emperor.5
	title = mem_lost_emperor.5.name
	desc = {
		trigger = {
			owner = {
				NOT = {
					has_country_flag = mem_azran_failed_before
				}
			}
		}
		text = mem_lost_emperor.5.desc
	}
	desc = {
		trigger = {
			owner = {
				has_country_flag = mem_azran_failed_before
			}
		}
		text = mem_lost_emperor.5.desc.again
	}
	picture = GFX_evt_unknown_ships

	is_triggered_only = yes

	immediate = {
		solar_system.star = {
			create_country = {
				type = mem_azran
				name = "Azran"
				effect = {
					set_country_flag = mem_azran
				}
			}
			create_fleet = {
				name = "Azran"

				settings = {
					spawn_debris = no

					#Enable this once I am satisfied that I have made a very strong but beatable foe
#					is_boss = yes
				}

				effect = {
					set_owner = last_created_country

					create_ship_design = {
						design = "NAME_Azran"
					}
					create_ship = {
						name = "NAME_Azran"
						design = last_created_design
						upgradable = no
					}

					set_location = prev
				}
			}
		}
	}

	option = {
		name = mem_lost_emperor.5.option
	}
}

#You lost to Azran
# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = mem_lost_emperor.6
	title = mem_lost_emperor.6.name
	desc = mem_lost_emperor.6.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	trigger = {
		from = {
			has_country_flag = mem_azran
		}
	}

	immediate = {
		set_country_flag = mem_azran_failed_before
		fromfromfrom = {
			solar_system = {
				save_event_target_as = mem_lost_emperor_system
			}
			delete_fleet = this
		}
		from = {
			destroy_country = yes
		}
	}

	option = { #we will return in greater force
		name = mem_lost_emperor.6.A
		
		enable_special_project = {
			name = mem_lost_emperor_military_investigate_1
			location = event_target:mem_lost_emperor_system.star
		}
	}
	option = { #that's enough of this
		name = mem_lost_emperor.6.B
	}
}

#You defeated Azran
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = mem_lost_emperor.7
	title = mem_lost_emperor.7.name
	desc = mem_lost_emperor.7.desc
	picture = GFX_evt_exploding_ship

	is_triggered_only = yes

	trigger = {
		from = {
			has_country_flag = mem_azran
		}
	}

	immediate = {
		fromfrom = {
			save_event_target_as = mem_azran_vanquisher_fleet
		}
	}

	option = { #we will return in greater force
		name = mem_lost_emperor.7.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.8 }
		}
	}
}


#Establish comms with Neochadanus
country_event = {
	id = mem_lost_emperor.8
	title = mem_lost_emperor.8.name
	desc = mem_lost_emperor.8.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	immediate = {
		create_species = {
			name = "Neochadanus"
			class = random_non_machine
			
			traits = {
				trait = trait_psionic
				trait = trait_cybernetic
				trait = trait_erudite
				trait = trait_very_strong
				trait = trait_venerable
			}
		}
		create_saved_leader = {
			key = Neochadanus
			name = "Neochadanus"
			type = ruler
			species = last_created
			
			traits = {
				trait = leader_trait_ruler_chosen
				trait = leader_trait_ruler_psionic
				trait = leader_trait_ruler_erudite
				trait = mem_leader_trait_ruler_knowledge_of_another_age
				trait = mem_leader_trait_ruler_lunatic_neoch
			}

			effect = {
				save_event_target_as = mem_neochadanus
			}
		}
	}

	option = {
		name = mem_lost_emperor.8.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.9 }
		}
	}
}


country_event = {
	id = mem_lost_emperor.9
	title = mem_lost_emperor.9.name
	desc = mem_lost_emperor.9.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = { #You are insane
		name = mem_lost_emperor.9.A
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.10 }
		}
	}
	
	option = { #OK emperor talk please
		name = mem_lost_emperor.9.B
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.11 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.10
	title = mem_lost_emperor.10.name
	desc = mem_lost_emperor.10.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = { #This convo is over
		name = mem_lost_emperor.10.A
		
		hidden_effect = {
			set_timed_country_flag = {
				flag = mem_scorned_neochadanus
				days = 5				
			}
			country_event = { id = mem_lost_emperor.20 }
		}
	}
	
	option = { #OK emperor talk please
		name = mem_lost_emperor.10.B
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.11 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.11
	title = mem_lost_emperor.11.name
	desc = mem_lost_emperor.11.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.11.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.12 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.12
	title = mem_lost_emperor.12.name
	desc = mem_lost_emperor.12.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.12.option
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.13 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.13
	title = mem_lost_emperor.13.name
	desc = mem_lost_emperor.13.desc

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.13.option
		response_text = mem_lost_emperor.13.response
		
		hidden_effect = {
			country_event = { id = mem_lost_emperor.20 }
		}
	}
}

country_event = {
	id = mem_lost_emperor.20
	title = mem_lost_emperor.20.name
	desc = {
		trigger = {
			NOT = {
				has_country_flag = mem_scorned_neochadanus
			}
		}
		text = mem_lost_emperor.20.desc
	}
	desc = {
		trigger = {
			has_country_flag = mem_scorned_neochadanus
		}
		text = mem_lost_emperor.20.desc.scorned
	}

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		room = ethic_spaceship_room
		portrait = event_target:mem_neochadanus
	}

	option = {
		name = mem_lost_emperor.20.accept
		custom_tooltip = mem_lost_emperor.20.accept.tooltip

		hidden_effect = {
			effects = yes
		}
		if = {
			limit = {
				NOT = {
					has_authority = auth_imperial
				}
			}
			effects = yes
		}

		custom_tooltip = mem_lost_emperor.20.accept.tooltip2

		response_text = mem_lost_emperor.20.accept.response
	}
	
	option = {
		name = mem_lost_emperor.20.suggest

		response_text = mem_lost_emperor.20.suggest.response

		is_dialog_only = yes

		trigger = {
			NOT = {
				has_authority = auth_imperial
			}
		}
	}
	
	option = {
		name = mem_lost_emperor.20.imprison
		custom_tooltip = mem_lost_emperor.20.imprison.tooltip

		hidden_effect = {
			effects = yes
		}
		
		response_text = mem_lost_emperor.20.imprison.response
	}
	
	option = {
		name = mem_lost_emperor.20.dissemble

		hidden_effect = {
			effects = yes
		}
		
		response_text = mem_lost_emperor.20.dissemble.response
	}
	
	option = {
		name = mem_lost_emperor.20.destroy
		custom_tooltip = mem_lost_emperor.20.destroy.tooltip

		hidden_effect = {
			effects = yes
		}
		
		response_text = mem_lost_emperor.20.destroy.response
	}
}























#Portion of empire ascends

country_event = {
	id = mem_lost_emperor.999

	is_triggered_only = yes

	trigger = {
		num_owned_planets > 1
	}

	immediate = {
				
		while = {
			limit = {
				any_owned_planet = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
			}
			random_owned_planet = {
				limit = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
				set_timed_planet_flag = {
					flag = mem_lost_emperor_planet_counted
					days = 3600
				}
			}
			change_variable = {
				which = mem_lost_emperor_planets_count
				value = @mem_lost_emperor_ascension_percentage
			}
		}
		if = {
			limit = {
				check_variable = {
					which = mem_lost_emperor_planets_count
					value < 1
				}
			}
			set_variable = {
				which = mem_lost_emperor_planets_count
				value = 1
			}
		}

		capital_scope = {
			effects = yes
		}
		change_variable = {
			which = mem_lost_emperor_planets_count
			value = -1
		}
		while = {
			limit = {
				check_variable = {
					which = mem_lost_emperor_planets_count
					value > 0.99
				}
			}
			random_owned_planet = {
				limit = {
					num_pops > 7
					NOT = {
						has_planet_flag = mem_lost_emperor_planet_counted
					}
				}
				effects = yes
			}
			change_variable = {
				which = mem_lost_emperor_planets_count
				value = -1
			}
		}
	}
}