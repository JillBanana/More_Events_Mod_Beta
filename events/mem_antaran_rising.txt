namespace = mem_vazuran_test

country_event = {
	id = mem_vazuran_test.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		random_system = {
			limit = {
				is_rim_system = yes
			}
			spawn_system = { 
				min_distance = 70 
				max_distance = 150
				initializer = "mem_vazuran_homesystem"
				hyperlane = no 
				is_discovered = yes
			}
		}
	}
}

country_event = {
	id = mem_vazuran_test.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				has_owner = yes
				starting_system = yes
				owner = {
					is_same_value = root
				}
			}
			random_system = {
				limit = {
					has_star_flag = mem_vazuran_homesystem
				}
				prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
						spawn_natural_wormhole = {
						random_pos = yes
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					random_pos = yes
					orbit_angle = 360
				}
				link_wormholes = prev
			}
		}
		add_seen_bypass_type = wormhole
	}
}

country_event = {
	id = mem_vazuran_test.3
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = { is_country_type = mem_vazurans_system }
			establish_communications_no_message = ROOT
		}
	}
}



country_event = {
	id = mem_vazuran_test.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_country_type = dormant_marauders }
			establish_communications_no_message = ROOT
		}
		random_system = {
			limit = {
				has_owner = yes
				starting_system = yes
				owner = {
					is_same_value = root
				}
			}
			random_system = {
				limit = {
					has_owner = yes
					owner = {
						is_country_type = dormant_marauders
					}
				}
				prev = { # done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
						spawn_natural_wormhole = {
						random_pos = yes
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					random_pos = yes
					orbit_angle = 360
				}
				link_wormholes = prev
			}
		}
		add_seen_bypass_type = wormhole
	}
}