# The Return of the Sadrell
# By ViolentBeetle

namespace = mem_sadrell

# Game start event: Plug in missing systems if any failed to spawn. Place anomalies
event = {
    id = mem_sadrell.1
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_global_flag = mem_sadrell_cluster_spawned
    }

    immediate = {
        # Spawning the for essentials; if any are missing.
        every_system = { # It did its job
            limit = {
                has_star_flag = mem_sadrell_home_cluster
            }
            remove_star_flag = empire_cluster
        }
        random_system = {
            limit = { has_star_flag = mem_sadrell_gate_system }
            set_spawn_system_batch = begin
            IF = {
                limit = {
                    NOT = { any_system = { has_star_flag = mem_sadrell_homeworld_system } }
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 20
                    min_orientation_angle = 24
                    max_orientation_angle = 66
                    initializer = mem_sadrell_0_1
                }
                log = "0-1"
            }
            IF = {
                limit = {
                    NOT = { any_system = { has_star_flag = mem_sadrell_industrial_system } }
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 20
                    min_orientation_angle = 94
                    max_orientation_angle = 136
                    initializer = mem_sadrell_0_2
                }
                log = "0-2"
            }
            IF = {
                limit = {
                    NOT = { any_system = { has_star_flag = mem_sadrell_agri_system } }
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 20
                    min_orientation_angle = 164
                    max_orientation_angle = 206
                    initializer = mem_sadrell_0_3
                }
                log = "0-3"
            }
            IF = {
                limit = {
                    NOT = { any_system = { has_star_flag = mem_sadrell_science_system } }
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 20
                    min_orientation_angle = 234
                    max_orientation_angle = 306
                    initializer = mem_sadrell_0_4
                }
                log = "0-4"
            }
            set_spawn_system_batch = end
        }
        # Spawn anomalies here, maybe. Or perhaps put them through random picks? Or both?
    }
}

# On entering system for the first time
ship_event = {
    id = mem_sadrell.2
    title = mem_sadrell.2.name
    desc = mem_sadrell.2.desc

    is_triggered_only = yes

    picture = GFX_evt_drifting_gateway
    location = FROM
    show_sound = event_scanner

    trigger = {
        FROM = { has_star_flag = mem_sadrell_gate_system }
        owner = {
            NOT = { has_country_flag = mem_sadrell_encountered_gate }
        }
    }

    option = {
        name = INTERESTING
    }
}

# Spawn Sadrell cluster. Either call it or copy it later
event = {
    id = mem_sadrell.3
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        random_megastructure = {
            limit = { is_megastructure_type = mem_sadrell_gateway_inactive }
            remove_megastructure = this
            solar_system = {
                spawn_megastructure = {
                    type = mem_sadrell_gateway_active
                    orbit_angle = 0
                    orbit_distance = 60
                    location = solar_system
                }
                random_system_megastructure = {
                    limit = { is_megastructure_type = mem_sadrell_gateway_active }
                    activate_gateway = this
                }
            }            
        }
        set_spawn_system_batch = begin
        no_scope = {
            spawn_system = {
                min_distance >= 700
                max_distance <= 720
                min_orientation_angle = 244
                max_orientation_angle = 246
                initializer = mem_sadrell_1_0
            }
            event_target:system_0 = {
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 25
                    min_orientation_angle = 70
                    max_orientation_angle = 75
                    initializer = mem_sadrell_1_1
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 25
                    min_orientation_angle = 142
                    max_orientation_angle = 147
                    initializer = mem_sadrell_1_2
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 25
                    min_orientation_angle = 214
                    max_orientation_angle = 217
                    initializer = mem_sadrell_1_3
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 25
                    min_orientation_angle = 286
                    max_orientation_angle = 289
                    initializer = mem_sadrell_1_4
                }
                spawn_system = {
                    min_distance >= 15
                    max_distance <= 25
                    min_orientation_angle = 350
                    max_orientation_angle = 355
                    initializer = mem_sadrell_1_5
                }
            }
        }
        every_system = {
            limit = { has_star_flag = mem_sadrell_extant_cluster }
            isolate_system = yes
        }
        add_hyperlane = {
            from = event_target:system_1
            to = event_target:system_2
        }
        add_hyperlane = {
            from = event_target:system_2
            to = event_target:system_3
        }
        add_hyperlane = {
            from = event_target:system_3
            to = event_target:system_4
        }
        add_hyperlane = {
            from = event_target:system_4
            to = event_target:system_5
        }
        add_hyperlane = {
            from = event_target:system_5
            to = event_target:system_1
        }
        add_hyperlane = {
            from = event_target:system_0
            to = event_target:system_1
        }
        add_hyperlane = {
            from = event_target:system_0
            to = event_target:system_3
        }
        set_spawn_system_batch = end
    }
}